<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="Color_SelectedText">
        <textcolor>$VAR[ColorSelected]</textcolor>
        <selectedcolor>$VAR[ColorSelected]</selectedcolor>
    </include>

    <variable name="ColorMainItem">
        <value>ff3d3543</value>
    </variable>

    <!-- ColorPicker -->
    <variable name="ColorPickerHex">
        <value condition="Control.HasFocus(3000)">$INFO[Container(3000).ListItem.Label]</value>
        <value condition="String.IsEqual(Window(Home).Property(ColorPicker_Type),Highlight)">$VAR[ColorHighlight]</value>
        <value condition="String.IsEqual(Window(Home).Property(ColorPicker_Type),Gradient)">$VAR[ColorGradient]</value>
        <value condition="String.IsEqual(Window(Home).Property(ColorPicker_Type),Indicator)">$VAR[ColorWatchedProgress]</value>
        <value condition="String.IsEqual(Window(Home).Property(ColorPicker_Type),series_premiere)">$VAR[ColorBanner_series_premiere]</value>
        <value condition="String.IsEqual(Window(Home).Property(ColorPicker_Type),season_premiere)">$VAR[ColorBanner_season_premiere]</value>
        <value condition="String.IsEqual(Window(Home).Property(ColorPicker_Type),mid_season_premiere)">$VAR[ColorBanner_mid_season_premiere]</value>
        <value condition="String.IsEqual(Window(Home).Property(ColorPicker_Type),series_finale)">$VAR[ColorBanner_series_finale]</value>
        <value condition="String.IsEqual(Window(Home).Property(ColorPicker_Type),season_finale)">$VAR[ColorBanner_season_finale]</value>
        <value condition="String.IsEqual(Window(Home).Property(ColorPicker_Type),mid_season_finale)">$VAR[ColorBanner_mid_season_finale]</value>
    </variable>

    <!-- Highlight Color -->
    <variable name="ColorHighlight">
        <value condition="!String.IsEmpty(Skin.String(focuscolor.name))">$INFO[Skin.String(focuscolor.name)]</value>
        <value>ffe91e63</value>
    </variable>

    <!-- Gradient Color -->
    <variable name="ColorGradient">
        <value condition="!Skin.HasSetting(EnableMonochromeHighlight) + !String.IsEmpty(Skin.String(gradientcolor.name))">$INFO[Skin.String(gradientcolor.name)]</value>
        <value condition="!Skin.HasSetting(EnableMonochromeHighlight)">ffb635e5</value>
        <value>$VAR[ColorHighlight]</value>
    </variable>

    <!-- Watched / Progress Color -->
    <variable name="ColorWatchedProgress">
        <value condition="!String.IsEmpty(Skin.String(watchedprogresscolor.name))">$INFO[Skin.String(watchedprogresscolor.name)]</value>
        <value>ff03b585</value>
    </variable>

    <!-- Mouse Pointer -->
    <variable name="ColorMousePointer">
        <value condition="!String.IsEmpty(Skin.String(mousepointercolor.name))">$INFO[Skin.String(mousepointercolor.name)]</value>
        <value>bf999999</value>
    </variable>

    <!-- Banner Colors -->
    <variable name="ColorBanner_series_premiere">
        <value condition="!String.IsEmpty(Skin.String(series_premiere_color.name))">$INFO[Skin.String(series_premiere_color.name)]</value>
        <value>ff0385b5</value>
    </variable>
    <variable name="ColorBanner_season_premiere">
        <value condition="!String.IsEmpty(Skin.String(season_premiere_color.name))">$INFO[Skin.String(season_premiere_color.name)]</value>
        <value>ff03b585</value>
    </variable>
    <variable name="ColorBanner_mid_season_premiere">
        <value condition="!String.IsEmpty(Skin.String(mid_season_premiere_color.name))">$INFO[Skin.String(mid_season_premiere_color.name)]</value>
        <value>ff85b503</value>
    </variable>
    <variable name="ColorBanner_series_finale">
        <value condition="!String.IsEmpty(Skin.String(series_finale_color.name))">$INFO[Skin.String(series_finale_color.name)]</value>
        <value>ff8503b5</value>
    </variable>
    <variable name="ColorBanner_season_finale">
        <value condition="!String.IsEmpty(Skin.String(season_finale_color.name))">$INFO[Skin.String(season_finale_color.name)]</value>
        <value>ffb50385</value>
    </variable>
    <variable name="ColorBanner_mid_season_finale">
        <value condition="!String.IsEmpty(Skin.String(mid_season_finale_color.name))">$INFO[Skin.String(mid_season_finale_color.name)]</value>
        <value>ffb58503</value>
    </variable>

    <!-- EPG Progress Color -->
    <variable name="ColorPVRProgress">
        <value>main_bg_70</value>
    </variable>

    <!-- Selected Color -->
    <variable name="ColorSelected_30">
        <value condition="Skin.HasSetting(InvertSelectedText)">4d333333</value>
        <value>4dffffff</value>
    </variable>

    <variable name="ColorSelected_50">
        <value condition="Skin.HasSetting(InvertSelectedText)">80333333</value>
        <value>80ffffff</value>
    </variable>

    <variable name="ColorSelected">
        <value condition="Skin.HasSetting(InvertSelectedText)">ff333333</value>
        <value>white</value>
    </variable>

    <!-- Tricks for Settings Changer -->
    <variable name="ColorSettingsToggleButton_Script">
        <value condition="ControlGroup(30030).HasFocus() | ControlGroup(30000).HasFocus() | ControlGroup(30040).HasFocus() | ControlGroup(30700).HasFocus()">00ffffff</value>
        <value>ffffffff</value>
    </variable>
    <variable name="ColorSettingsToggleButton_Native">
        <value condition="ControlGroup(30030).HasFocus() | ControlGroup(30000).HasFocus() | ControlGroup(30040).HasFocus() | ControlGroup(30700).HasFocus()">00ffffff</value>
        <value>$VAR[ColorHighlight]</value>
    </variable>

    <variable name="ColorSettingsToggleButtonText">
        <value condition="ControlGroup(30030).HasFocus() | ControlGroup(30000).HasFocus() | ControlGroup(30040).HasFocus() | ControlGroup(30700).HasFocus()">main_fg_70</value>
        <value>$VAR[ColorSelected]</value>
    </variable>

    <variable name="ColorBackground">
        <value>main_bg_100</value>
    </variable>

    <variable name="ColorBackgroundFade">
        <value>shadow_back</value>
    </variable>
</includes>