<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="Hub_Slide_Group_WidgetsUp">
        <animation effect="slide" time="400" end="0" start="0,hub_group_widgetup_s" tween="quadratic" easing="out" reversible="false" condition="String.IsEmpty(Window.Property(Slide.WidgetContainer))">Conditional</animation>
        <animation effect="slide" time="400" end="0,hub_group_widgetup_s" start="0" tween="quadratic" easing="out" reversible="false" condition="!String.IsEmpty(Window.Property(Slide.WidgetContainer))">Conditional</animation>
    </include>

    <include name="Hub_Slide_Spotlight_NoFocus">
        <animation effect="slide" tween="quadratic" easing="out" reversible="false" start="0" end="0,hub_spotlight_s" time="200" condition="!ControlGroup(310).HasFocus()">Conditional</animation>
        <animation effect="slide" tween="quadratic" easing="out" reversible="false" start="0,hub_spotlight_s" end="0" time="200" condition="ControlGroup(310).HasFocus()">Conditional</animation>
    </include>

    <include name="Hub_Slide_Group_NoSpotlight">
        <animation effect="slide" time="400" end="0" start="0,hub_group_nospotlight_s" tween="quadratic" easing="out" reversible="false" condition="![!$EXP[Exp_Hubs_Spotlight_HasItems] + $EXP[Exp_Hubs_Spotlight_IsVisible]]">Conditional</animation>
        <animation effect="slide" time="400" end="0,hub_group_nospotlight_s" start="0" tween="quadratic" easing="out" reversible="false" condition="!$EXP[Exp_Hubs_Spotlight_HasItems] + $EXP[Exp_Hubs_Spotlight_IsVisible]">Conditional</animation>
    </include>

    <include name="Hub_Slide_Widgets_NoSubmenu">
        <animation effect="slide" time="400" start="0,hub_widgets_nosubmenu_s" end="0" tween="quadratic" easing="out" reversible="false" condition="![Integer.IsEqual(Container(302).NumItems,0) + Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)]">Conditional</animation>
        <animation effect="slide" time="400" start="0" end="0,hub_widgets_nosubmenu_s" tween="quadratic" easing="out" reversible="false" condition="Integer.IsEqual(Container(302).NumItems,0) + Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)">Conditional</animation>
    </include>

    <include name="Hub_Slide_Widgets_NoCategories">
        <animation effect="slide" time="400" start="0,hub_widgets_nocategories_s" end="0" tween="quadratic" easing="out" reversible="false" condition="Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)">Conditional</animation>
        <animation effect="slide" time="400" start="0" end="0,hub_widgets_nocategories_s" tween="quadratic" easing="out" reversible="false" condition="!Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)">Conditional</animation>
    </include>

    <variable name="Hub_Submenu_Highlight">
        <value condition="!String.IsEmpty(Container(302).ListItem.Property(useWidgetList)) + [!String.IsEmpty(Container(302).ListItem.Property(widgetPath)) | !String.IsEmpty(Container(302).ListItem.Property(list))]">main_fg_90</value>
        <value condition="String.IsEmpty(Container(300).ListItem.Property(useWidgetList)) + String.IsEmpty(Container(302).ListItem.Property(widgetPath)) + String.IsEmpty(Container(302).ListItem.Property(list)) + !String.IsEmpty(Container(302).ListItem.FolderPath)">main_fg_90</value>
        <value>main_fg_30</value>
    </variable>

    <include name="Hub_Submenu_List">
        <param name="ondown">340</param>
        <param name="hidden_button">List_ButtonMenu_Row_HiddenButton_View</param>
        <definition>
            <include content="Categories_Selector">
                <param name="id">$PARAM[id]</param>
                <param name="window_id">$PARAM[window_id]</param>
                <param name="font">font_mini</param>
                <param name="color_fo">$VAR[Hub_Submenu_Highlight]</param>
                <param name="color_nf">main_fg_30</param>
                <param name="hidden_button">$PARAM[hidden_button]</param>
                <param name="hidden_button_prefix">$PARAM[hidden_button_prefix]</param>
                <param name="slide">Skin.HasSetting(Slide.WidgetContainer)</param>
                <param name="hitrect_x">40</param>
                <param name="hitrect_y">40</param>
                <param name="hitrect_w">1640</param>
                <param name="hitrect_h">80</param>

                <top>0</top>
                <left>240</left>
                <height>240</height>
                <include content="Action_Menu_Movement_OnBack">
                    <param name="id">$PARAM[id]</param>
                </include>
                <onup>300</onup>
                <ondown>$PARAM[ondown]</ondown>
                <onfocus>SetProperty(TMDbHelper.WidgetContainer,301,$PARAM[window_id])</onfocus>
                <nested />
            </include>
        </definition>
    </include>

    <include name="Hub_Submenu_Group">
        <control type="group" id="3000">
            <visible>!$EXP[Exp_InfoDialogs]</visible>
            <include>Animation_Transition_InfoPanel_Hide</include>
            <include>Transitions_Down_Visibility</include>
            <top>hub_submenuwidget_t</top>
            <height>hub_submenuwidget_h</height>
            <left>view_button_left</left>
            <orientation>vertical</orientation>
            <nested />
        </control>
    </include>

    <include name="Hub_Menu_Group">
        <param name="widgets_only">false</param>
        <definition>
            <control type="group">
                <include>Animation_Half_WindowChange</include>
                <include condition="![$PARAM[widgets_only]]">Hub_Slide_Group_NoSpotlight</include>
                <include>Hub_Slide_Group_WidgetsUp</include>
                <nested />
            </control>
        </definition>
    </include>

    <include name="Hub_Widget_Splash">
        <control type="group">
            <visible>[Skin.HasSetting(Startup.WaitForLoad) + [[Integer.IsEqual(Container(301).NumItems,0) + Container(301).IsUpdating] | [Container(303).IsUpdating + Integer.IsEqual(Container(303).NumItems,0)]]]</visible>
            <visible>System.HasAlarm(SplashTimeOut)</visible>
            <include>Background_StartUp</include>
            <include>Object_StartUp_Logo</include>
            <control type="label">
                <centertop>610</centertop>
                <height>40</height>
                <aligny>center</aligny>
                <align>center</align>
                <textcolor>main_logo</textcolor>
                <label>$LOCALIZE[31427] [LOWERCASE]$LOCALIZE[31103][/LOWERCASE]...</label>
            </control>
            <control type="group">
                <centertop>700</centertop>
                <height>80</height>
                <include content="Object_BusySpinner">
                    <param name="colordiffuse">main_fg</param>
                    <param name="haslabel">false</param>
                </include>
            </control>
        </control>
    </include>

    <include name="Hub_Controls">
        <param name="fullscreen_content">$VAR[Path_Spotlight_Fallback_Content]</param>
        <param name="fullscreen_target">$VAR[Path_Spotlight_Fallback_Target]</param>
        <param name="fullscreen_sortby">random</param>
        <param name="widgets_only">false</param>
        <param name="include">Hub_Standard</param>
        <definition>

            <!-- Background -->
            <include>View_Bumper</include>
            <include condition="![$PARAM[widgets_only]]">Spotlight_Fallback_Slideshow</include>
            <include>Defs_TMDbHelper_Loader</include>
            <include content="Background_Main">
                <include content="Object_Control" condition="Skin.HasSetting(Background.EnableSpotlightFanart)">
                    <param name="control">image</param>
                    <aspectratio>scale</aspectratio>
                    <fadetime>background_fadetime</fadetime>
                    <texture background="true">$VAR[Image_FullscreenWidget_Artwork]</texture>
                    <include>Background_NotVideo</include>
                    <include content="Animation_Fade_In">
                        <param name="type">WindowOpen</param>
                    </include>
                    <include content="Animation_Fade_Out">
                        <param name="type">WindowClose</param>
                    </include>
                    <animation effect="fade" start="0" end="100" time="background_fadetime">VisibleChange</animation>

                    <visible>Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)</visible>
                    <visible>!Integer.IsEqual(Container(301).NumItems,0)</visible>
                </include>
            </include>
            <include>Background_Transition</include>

            <include content="Object_Hidden_Button" condition="$PARAM[widgets_only]">
                <param name="id">300</param>
                <onfocus>SetFocus(303)</onfocus>
                <onleft>SetFocus(303)</onleft>
                <onright>SetFocus(303)</onright>
                <ondown>SetFocus(303)</ondown>
                <onup>SetFocus(303)</onup>
                <onback>SetFocus(303)</onback>
                <onclick>SetFocus(303)</onclick>
            </include>

            <include content="Hub_Main_Group">
                <param name="widgets_only">[$PARAM[widgets_only]]</param>
                <include content="Hub_Menu_Group" condition="![$PARAM[widgets_only]]">
                    <include content="Hub_Categories">
                        <param name="categories">$PARAM[categories]</param>
                        <param name="window_id">$PARAM[window_id]</param>
                    </include>
                </include>
                <include content="Spotlight_List" condition="![$PARAM[widgets_only]]">
                    <param name="window_id">$PARAM[window_id]</param>
                    <param name="sortby">$PARAM[fullscreen_sortby]</param>
                    <param name="sortorder">$PARAM[fullscreen_sortorder]</param>
                    <param name="target">$PARAM[fullscreen_target]</param>
                    <param name="limit">$PARAM[fullscreen_limit]</param>
                    <param name="browse">never</param>
                    <param name="content">$PARAM[fullscreen_content]</param>
                    <visible>String.IsEmpty(Container(300).ListItem.Property(spotlight_path))</visible>
                </include>
                <include content="$PARAM[include]" condition="![$PARAM[widgets_only]]">
                    <param name="categories">$PARAM[categories]</param>
                    <param name="window_id">$PARAM[window_id]</param>
                </include>
                <include content="Hub_Widgets_Only" condition="$PARAM[widgets_only]">
                    <param name="widgets_include">$PARAM[widgets_include]</param>
                </include>
            </include>

            <include>Widget_Transitions</include>

            <!-- Side Fade -->
            <include>Home_Fade</include>

            <!-- Furniture -->
            <control type="group">
                <visible>!$EXP[Exp_InfoDialogs]</visible>
                <include>Furniture_Top</include>
                <include>Home_FloatingClock</include>
            </control>

            <nested />

            <!-- SideMenu -->
            <include>Home_Menu</include>

            <!-- Plot Dialog Overlay -->
            <include>View_Dialog_Plot</include>
        </definition>
    </include>

    <include name="Hub_Widgets_Only">
        <include>Background_Transition</include>
        <include content="Hub_Widgets_Group">
            <include content="Home_Widgets_Infopanel">
                <include content="Info_Panel">
                    <param name="container">Container.</param>
                </include>
            </include>
            <include>$PARAM[widgets_include]</include>
        </include>
    </include>

    <variable name="Hub_Submenu_Content">
        <value condition="!String.IsEmpty(Container(300).ListItem.Property(submenulist_path))">$INFO[Container(300).ListItem.Property(submenulist_path)]</value>
        <value>plugin://script.skinvariables/?info=get_shortcuts_node$INFO[Container(300).ListItem.Property(menu),&amp;menu=,]$INFO[Container(300).ListItem.Property(list),&amp;node=,]$INFO[Container(300).ListItem.Property(skin),&amp;skin=,]$INFO[Window(Home).Property(SkinVariables.ShortcutsNode.Reload),&amp;reload=,]</value>
    </variable>

    <include name="Hub_Standard">
        <include content="Hub_Menu_Group">
            <include content="Hub_Submenu_Group">
                <include>skinvariables-$PARAM[categories]-submenu</include>
            </include>
        </include>

        <include>skinvariables-$PARAM[categories]-spotlight</include>

        <include content="Hub_Widgets_Group">
            <include>skinvariables-$PARAM[categories]-widgets</include>
        </include>

        <include content="Home_Widgets_Infopanel">
            <include content="Info_Panel">
                <param name="container">Container.</param>
                <visible>!Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)</visible>
            </include>
        </include>
    </include>

    <include name="Hub_Main_Group">
        <control type="group" id="320">
            <include>Animation_View_WindowChange</include>
            <include>Animation_Group_Bumper</include>
            <nested />
            <include condition="![$PARAM[widgets_only]]">Spotlight_Info</include>
        </control>
    </include>

    <include name="Hub_Widgets_Group">
        <control type="group" id="340">
            <nested />
        </control>
    </include>

    <include name="Hub_Categories_Dynamic">
        <include content="Action_SkinVariables_ShortcutList_Onclick">
            <param name="id">$PARAM[id]</param>
        </include>
        <content>plugin://script.skinvariables/?info=get_shortcuts_node&amp;menu=$PARAM[categories]&amp;skin=$VAR[Path_SkinVariables_SkinFolder]&amp;reload=$INFO[Window(Home).Property(SkinVariables.ShortcutsNode.Reload)]</content>
    </include>

    <include name="Hub_Categories_Static">
        <content>
            <include>skinvariables-$PARAM[categories]-staticitems</include>
        </content>
    </include>


    <include name="Hub_Categories">
        <control type="group">
            <visible>!$EXP[Exp_InfoDialogs]</visible>
            <include>Animation_Transition_InfoPanel_Hide</include>
            <include content="Spotlight_Main">
                <param name="window_id">$PARAM[window_id]</param>
                <param name="visible">$EXP[Exp_Hubs_Spotlight_HasItems]</param>
            </include>
            <include>Transitions_Down_Visibility</include>
            <include content="Categories_Selector">
                <param name="window_id">$PARAM[window_id]</param>
                <param name="hitrect_x">-40</param>
                <param name="hitrect_y">700</param>
                <param name="hitrect_w">1640</param>
                <param name="hitrect_h">80</param>
                <param name="shorten">True</param>
                <param name="hidden_button_prefix">Item.$INFO[Container(300).ListItem.Property(item)]302.</param>
                <param name="slide">Skin.HasSetting(Slide.WidgetContainer)</param>

                <onup condition="$EXP[Exp_Hubs_Spotlight_HasItems]">311</onup>
                <include content="Action_Widget_Top">
                    <param name="id">300</param>
                    <param name="condition">[!$EXP[Exp_Hubs_Spotlight_HasItems]]</param>
                </include>

                <include content="Action_Menu_Movement_OnBack">
                    <param name="id">300</param>
                </include>
                <ondown>302</ondown>
                <onfocus>SetProperty(TMDbHelper.WidgetContainer,301,$PARAM[window_id])</onfocus>
                <include content="Hub_Categories_Dynamic" condition="Skin.HasSetting(KioskMode.HubConfigurationUnlocked)">
                    <param name="id">$PARAM[id]</param>
                    <param name="categories">$PARAM[categories]</param>
                </include>
                <include content="Hub_Categories_Static" condition="!Skin.HasSetting(KioskMode.HubConfigurationUnlocked)">
                    <param name="id">$PARAM[id]</param>
                    <param name="categories">$PARAM[categories]</param>
                </include>
            </include>
        </control>
    </include>

    <include name="Hub_Widgets_Grouplist">
        <control type="grouplist" id="$PARAM[id]">

            <top>hub_widgets_grouplist_t</top>
            <bottom>hub_widgets_grouplist_b</bottom>

            <include condition="![$PARAM[widgets_only]]">Hub_Widgets_Grouplist__Def_Layout_Expanded</include>
            <include condition="[[$PARAM[widgets_only]]]" content="Hub_Widgets_Grouplist__Def_Layout_Basic">
                <param name="id">$PARAM[id]</param>
            </include>

            <include content="Action_Widget_End">
                <param name="topid">$PARAM[topid]</param>
                <param name="id">$PARAM[id]</param>
            </include>

            <visible>$PARAM[visible]</visible>

            <nested />
        </control>
    </include>

    <include name="Home_Widgets_Infopanel">
        <param name="visible">True</param>
        <definition>
            <control type="group">
                <width>info_panel_w</width>
                <height>300</height>
                <left>view_side</left>
                <top>view_top</top>
                <visible>$PARAM[visible]</visible>
                <include>Animation_Transition_InfoPanel_Cond</include>
                <nested />
            </control>
        </definition>
    </include>

    <include name="Hub_Widgets_Grouplist__Def_Layout_Expanded">
        <onup>302</onup>
        <include>Hub_Slide_Widgets_NoCategories</include>
        <include>Hub_Slide_Widgets_NoSubmenu</include>
    </include>

    <include name="Hub_Widgets_Grouplist__Def_Layout_Basic">
        <include content="Action_Widget_Top">
            <param name="id">$PARAM[id]</param>
        </include>
        <animation effect="slide" end="0,hub_widgets_nocategories_s" condition="true">Conditional</animation>
    </include>
</includes>