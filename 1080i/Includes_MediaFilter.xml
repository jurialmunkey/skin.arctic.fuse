<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="MediaFilter_Node_ClearAll">
        <!-- <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir)">ClearProperty(MediaFilter.BaseDir)</onfocus> -->

        <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(albums) | Container.Content(artists)]">SetProperty(MediaFilter.BaseDir.Name,$VAR[Label_Section_Main])</onfocus>
        <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(albums) | Container.Content(artists)]">SetProperty(MediaFilter.BaseDir,$INFO[Container.FolderPath])</onfocus>
        <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir) + ![Container.Content(movies) | Container.Content(tvshows) | Container.Content(albums) | Container.Content(artists)]">ClearProperty(MediaFilter.BaseDir.Name)</onfocus>
        <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir) + ![Container.Content(movies) | Container.Content(tvshows) | Container.Content(albums) | Container.Content(artists)]">ClearProperty(MediaFilter.BaseDir)</onfocus>

        <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir)">ClearProperty(MediaFilter.Genre)</onfocus>
        <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir)">ClearProperty(MediaFilter.Studio)</onfocus>
        <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir)">ClearProperty(MediaFilter.Country)</onfocus>
        <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir)">ClearProperty(MediaFilter.MPAA)</onfocus>
        <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir)">ClearProperty(MediaFilter.Director)</onfocus>
        <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir)">ClearProperty(MediaFilter.Writer)</onfocus>
        <onfocus condition="!String.StartsWith(Container.FolderPath,plugin://script.skinvariables/?info=get_filter_dir)">ClearProperty(MediaFilter.Artist)</onfocus>
    </include>

    <include name="MediaFilter_Node_Filters">
        <control type="grouplist" id="9500">
            <top>300</top>
            <left>160</left>
            <orientation>horizontal</orientation>
            <onup>9003</onup>
            <ondown>9600</ondown>
            <onback>68</onback>
            <itemgap>-20</itemgap>
            <control type="button" id="9508">
                <visible>Window.IsVisible(MyMusicNav.xml)</visible>
                <texturenofocus />
                <font>font_main_bold</font>
                <label>Content$INFO[Window.Property(MediaFilter.ContentType),: ,]$INFO[Window.Property(MediaFilter.BaseDir.Name), (,)]</label>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
                <include>MediaFilter_Node_ClearAll</include>
                <onfocus>SetProperty(MediaFilter.InfoLabel,BaseDir)</onfocus>
                <onclick>SetProperty(MediaFilter.ContentType,Music)</onclick>
                <onclick condition="!String.IsEqual(Window.Property(MediaFilter.BaseDir.Name),Artists)">SetProperty(MediaFilter.BaseDir,musicdb://artists/)</onclick>
                <onclick condition="!String.IsEqual(Window.Property(MediaFilter.BaseDir.Name),Artists)">SetProperty(MediaFilter.BaseDir.Name,Artists)</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.BaseDir.Name),Artists)">SetProperty(MediaFilter.BaseDir,musicdb://albums/)</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.BaseDir.Name),Artists)">SetProperty(MediaFilter.BaseDir.Name,Albums)</onclick>

                <onclick>ClearProperty(MediaFilter.Genre)</onclick>
                <onclick>ClearProperty(MediaFilter.Studio)</onclick>
                <onclick>ClearProperty(MediaFilter.Country)</onclick>
                <onclick>ClearProperty(MediaFilter.MPAA)</onclick>
                <onclick>ClearProperty(MediaFilter.Director)</onclick>
                <onclick>ClearProperty(MediaFilter.Writer)</onclick>
                <onclick>ClearProperty(MediaFilter.Artist)</onclick>
                <onclick>RunScript(script.skinvariables,"run_executebuiltin=special://skin/shortcuts/builtins/skinvariables-mediafilter.json",use_rules)</onclick>
            </control>
            <control type="button" id="9507">
                <visible>Window.IsVisible(MyVideoNav.xml)</visible>
                <texturenofocus />
                <font>font_main_bold</font>
                <label>Content$INFO[Window.Property(MediaFilter.ContentType),: ,]$INFO[Window.Property(MediaFilter.BaseDir.Name), (,)]</label>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
                <include>MediaFilter_Node_ClearAll</include>
                <onfocus>SetProperty(MediaFilter.InfoLabel,BaseDir)</onfocus>
                <onclick condition="!String.IsEqual(Window.Property(MediaFilter.ContentType),Movies)">SetProperty(MediaFilter.ContentType,Movies)</onclick>
                <onclick condition="!String.IsEqual(Window.Property(MediaFilter.ContentType),Movies) + Library.HasContent(Movies)">SetProperty(MediaFilter.BaseDir,videodb://movies/titles)</onclick>
                <onclick condition="!String.IsEqual(Window.Property(MediaFilter.ContentType),Movies) + Library.HasContent(Movies)">SetProperty(MediaFilter.BaseDir.Name,Library)</onclick>
                <onclick condition="!String.IsEqual(Window.Property(MediaFilter.ContentType),Movies) + !Library.HasContent(Movies)">SetProperty(MediaFilter.BaseDir,plugin://plugin.video.themoviedb.helper/?info=trakt_trending&amp;tmdb_type=movie)</onclick>
                <onclick condition="!String.IsEqual(Window.Property(MediaFilter.ContentType),Movies) + !Library.HasContent(Movies)">SetProperty(MediaFilter.BaseDir.Name,Trending)</onclick>

                <onclick condition="String.IsEqual(Window.Property(MediaFilter.ContentType),Movies)">SetProperty(MediaFilter.ContentType,TV)</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.ContentType),Movies) + Library.HasContent(TVShows)">SetProperty(MediaFilter.BaseDir,videodb://tvshows/titles)</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.ContentType),Movies) + Library.HasContent(TVShows)">SetProperty(MediaFilter.BaseDir.Name,Library)</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.ContentType),Movies) + !Library.HasContent(TVShows)">SetProperty(MediaFilter.BaseDir,plugin://plugin.video.themoviedb.helper/?info=trakt_trending&amp;tmdb_type=tv)</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.ContentType),Movies) + !Library.HasContent(TVShows)">SetProperty(MediaFilter.BaseDir.Name,Trending)</onclick>

                <onclick>ClearProperty(MediaFilter.Genre)</onclick>
                <onclick>ClearProperty(MediaFilter.Studio)</onclick>
                <onclick>ClearProperty(MediaFilter.Country)</onclick>
                <onclick>ClearProperty(MediaFilter.MPAA)</onclick>
                <onclick>ClearProperty(MediaFilter.Director)</onclick>
                <onclick>ClearProperty(MediaFilter.Writer)</onclick>
                <onclick>ClearProperty(MediaFilter.Artist)</onclick>

                <onclick>RunScript(script.skinvariables,"run_executebuiltin=special://skin/shortcuts/builtins/skinvariables-mediafilter.json",use_rules)</onclick>
            </control>
            <control type="button" id="9501">
                <visible>!String.IsEmpty(Window.Property(MediaFilter.BaseDir))</visible>
                <texturenofocus />
                <font>font_main_bold</font>
                <label>Genre$INFO[Window.Property(MediaFilter.Genre),: ,]</label>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
                <include>MediaFilter_Node_ClearAll</include>
                <onfocus>SetProperty(MediaFilter.InfoLabel,Genre)</onfocus>
                <onclick>ClearProperty(MediaFilter.Genre)</onclick>
                <onclick>RunScript(script.skinvariables,"run_executebuiltin=special://skin/shortcuts/builtins/skinvariables-mediafilter.json",use_rules)</onclick>
            </control>
            <control type="button" id="9502">
                <visible>Window.IsVisible(MyVideoNav.xml)</visible>
                <visible>!String.IsEmpty(Window.Property(MediaFilter.BaseDir))</visible>
                <texturenofocus />
                <font>font_main_bold</font>
                <label>Studio$INFO[Window.Property(MediaFilter.Studio),: ,]</label>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
                <include>MediaFilter_Node_ClearAll</include>
                <onfocus>SetProperty(MediaFilter.InfoLabel,Studio)</onfocus>
                <onclick>ClearProperty(MediaFilter.Studio)</onclick>
                <onclick>RunScript(script.skinvariables,"run_executebuiltin=special://skin/shortcuts/builtins/skinvariables-mediafilter.json",use_rules)</onclick>
            </control>
            <control type="button" id="9504">
                <visible>Window.IsVisible(MyVideoNav.xml)</visible>
                <visible>!String.IsEmpty(Window.Property(MediaFilter.BaseDir))</visible>
                <texturenofocus />
                <font>font_main_bold</font>
                <label>MPAA$INFO[Window.Property(MediaFilter.MPAA),: ,]</label>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
                <include>MediaFilter_Node_ClearAll</include>
                <onfocus>SetProperty(MediaFilter.InfoLabel,MPAA)</onfocus>
                <onclick>ClearProperty(MediaFilter.MPAA)</onclick>
                <onclick>RunScript(script.skinvariables,"run_executebuiltin=special://skin/shortcuts/builtins/skinvariables-mediafilter.json",use_rules)</onclick>
            </control>
        </control>
        <control type="grouplist" id="9600">
            <top>360</top>
            <left>160</left>
            <width>1080</width>
            <orientation>horizontal</orientation>
            <onup>9500</onup>
            <onback>68</onback>
            <!-- <ondown>68</ondown> -->
            <ondown>67</ondown>
            <itemgap>-20</itemgap>
            <onleft>Control.Move(9701,-1)</onleft>
            <onright>Control.Move(9701,1)</onright>
            <animation effect="slide" end="-80" time="400" tween="quadratic" reversible="false" condition="!Container(9701).OnNext">Conditional</animation>
            <animation effect="slide" end="80" time="400" tween="quadratic" reversible="false" condition="!Container(9701).OnPrevious">Conditional</animation>
            <control type="button" id="9601">
                <texturenofocus />
                <font>font_mini</font>
                <label>$INFO[Container(9701).ListItem.Label]</label>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
                <onclick condition="Integer.IsGreater(Container(9701).NumItems,1) + !String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)">SetProperty(MediaFilter.$INFO[Window.Property(MediaFilter.InfoLabel)],$INFO[Container(9701).ListItem.Label])</onclick>
                <onclick condition="!Integer.IsGreater(Container(9701).NumItems,1) + !String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)">ClearProperty(MediaFilter.$INFO[Window.Property(MediaFilter.InfoLabel)])</onclick>

                <onclick condition="String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)">SetProperty(MediaFilter.BaseDir.Name,$INFO[Container(9701).ListItem.Label])</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)">SetProperty(MediaFilter.BaseDir,$INFO[Container(9701).ListItem.Property(path)])</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)">ClearProperty(MediaFilter.Genre)</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)">ClearProperty(MediaFilter.Studio)</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)">ClearProperty(MediaFilter.Country)</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)">ClearProperty(MediaFilter.MPAA)</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)">ClearProperty(MediaFilter.Director)</onclick>
                <onclick condition="String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)">ClearProperty(MediaFilter.Writer)</onclick>


                <onclick>RunScript(script.skinvariables,"run_executebuiltin=special://skin/shortcuts/builtins/skinvariables-mediafilter.json",use_rules)</onclick>
            </control>
            <control type="button" id="9602">
                <texturenofocus />
                <font>font_mini</font>
                <left>0</left>
                <width>20</width>
                <texturefocus />
                <texturenofocus />
                <onfocus>SetFocus(9601)</onfocus>
                <onfocus>Control.Move(9701,1)</onfocus>
            </control>
            <control type="button" id="9603">
                <texturenofocus />
                <font>font_mini</font>
                <label>$INFO[Container(9701).ListItem(1).Label]</label>
                <visible>Integer.IsGreater(Container(9701).NumItems,1)</visible>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
            </control>
            <control type="button" id="9604">
                <texturenofocus />
                <font>font_mini</font>
                <label>$INFO[Container(9701).ListItem(2).Label]</label>
                <visible>Integer.IsGreater(Container(9701).NumItems,2)</visible>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
            </control>
            <control type="button" id="9605">
                <texturenofocus />
                <font>font_mini</font>
                <label>$INFO[Container(9701).ListItem(3).Label]</label>
                <visible>Integer.IsGreater(Container(9701).NumItems,3)</visible>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
            </control>
            <control type="button" id="9606">
                <texturenofocus />
                <font>font_mini</font>
                <label>$INFO[Container(9701).ListItem(4).Label]</label>
                <visible>Integer.IsGreater(Container(9701).NumItems,4)</visible>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
            </control>
            <control type="button" id="9607">
                <texturenofocus />
                <font>font_mini</font>
                <label>$INFO[Container(9701).ListItem(5).Label]</label>
                <visible>Integer.IsGreater(Container(9701).NumItems,5)</visible>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
            </control>
            <control type="button" id="9608">
                <texturenofocus />
                <font>font_mini</font>
                <label>$INFO[Container(9701).ListItem(6).Label]</label>
                <visible>Integer.IsGreater(Container(9701).NumItems,6)</visible>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
            </control>
            <control type="button" id="9609">
                <texturenofocus />
                <font>font_mini</font>
                <label>$INFO[Container(9701).ListItem(7).Label]</label>
                <visible>Integer.IsGreater(Container(9701).NumItems,7)</visible>
                <height>80</height>
                <width>auto</width>
                <textoffsetx>40</textoffsetx>
                <textcolor>main_fg_30</textcolor>
            </control>
        </control>
    </include>

    <include name="MediaFilter_Node_Dialog">
        <include content="Dialog_Overlay_Side">
            <param name="dialog_size">Dimension_DialogSideMenu</param>
            <include>Animation_Right_Delay</include>
            <right>-1920</right>
            <include content="Dialog_Head">
                <param name="label"> </param>
            </include>
            <include content="Dialog_Body">
                <include content="Dialog_Body_Group">
                    <include content="List_DialogSelect">
                        <param name="id">9701</param>
                        <param name="textcolor">dialog_fg</param>

                        <content>
                            <item>
                                <label>Library</label>
                                <property name="path">videodb://movies/titles</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),Movies)</visible>
                                <visible>Library.HasContent(Movies)</visible>
                            </item>
                            <item>
                                <label>Library</label>
                                <property name="path">videodb://tvshows/titles</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),TV)</visible>
                                <visible>Library.HasContent(TVShows)</visible>
                            </item>
                            <item>
                                <label>Artists</label>
                                <property name="path">musicdb://artists</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),Music)</visible>
                                <visible>Library.HasContent(Music)</visible>
                            </item>
                            <item>
                                <label>Albums</label>
                                <property name="path">musicdb://albums</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),Music)</visible>
                                <visible>Library.HasContent(Music)</visible>
                            </item>
                            <item>
                                <label>Watchlist</label>
                                <property name="path">plugin://plugin.video.themoviedb.helper/?info=trakt_watchlist&amp;tmdb_type=movie</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),Movies)</visible>
                                <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.TraktIsAuth))</visible>
                            </item>
                            <item>
                                <label>Watchlist</label>
                                <property name="path">plugin://plugin.video.themoviedb.helper/?info=trakt_watchlist&amp;tmdb_type=tv</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),TV)</visible>
                                <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.TraktIsAuth))</visible>
                            </item>
                            <item>
                                <label>On Deck</label>
                                <property name="path">plugin://plugin.video.themoviedb.helper/?info=trakt_towatch&amp;tmdb_type=movie</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),Movies)</visible>
                                <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.TraktIsAuth))</visible>
                            </item>
                            <item>
                                <label>On Deck</label>
                                <property name="path">plugin://plugin.video.themoviedb.helper/?info=trakt_towatch&amp;tmdb_type=tv</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),TV)</visible>
                                <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.TraktIsAuth))</visible>
                            </item>
                            <item>
                                <label>Recommendations</label>
                                <property name="path">plugin://plugin.video.themoviedb.helper/?info=trakt_recommendations&amp;tmdb_type=movie</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),Movies)</visible>
                                <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.TraktIsAuth))</visible>
                            </item>
                            <item>
                                <label>Recommendations</label>
                                <property name="path">plugin://plugin.video.themoviedb.helper/?info=trakt_recommendations&amp;tmdb_type=tv</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),TV)</visible>
                                <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.TraktIsAuth))</visible>
                            </item>
                            <item>
                                <label>Trending</label>
                                <property name="path">plugin://plugin.video.themoviedb.helper/?info=trakt_trending&amp;tmdb_type=movie</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),Movies)</visible>
                            </item>
                            <item>
                                <label>Trending</label>
                                <property name="path">plugin://plugin.video.themoviedb.helper/?info=trakt_trending&amp;tmdb_type=tv</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),TV)</visible>
                            </item>
                            <item>
                                <label>History</label>
                                <property name="path">plugin://plugin.video.themoviedb.helper/?info=trakt_history&amp;tmdb_type=movie</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),Movies)</visible>
                                <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.TraktIsAuth))</visible>
                            </item>
                            <item>
                                <label>History</label>
                                <property name="path">plugin://plugin.video.themoviedb.helper/?info=trakt_history&amp;tmdb_type=tv</property>
                                <visible>String.IsEqual(Window.Property(MediaFilter.InfoLabel),BaseDir)</visible>
                                <visible>String.IsEqual(Window.Property(MediaFilter.ContentType),TV)</visible>
                                <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.TraktIsAuth))</visible>
                            </item>
                        </content>


                        <content sortby="label">$VAR[Path_MediaFilter_Node]</content>
                    </include>
                </include>
            </include>
        </include>
    </include>

    <include name="MediaFilter_Node">

        <control type="group">
            <visible>!$EXP[Exp_InfoDialogs]</visible>
            <visible>$EXP[Exp_MediaFilterVisible]</visible>
            <include content="Animation_Fade_In">
                <param name="delay">0</param>
                <param name="type">Visible</param>
            </include>

            <control type="group">
                <left>160</left>
                <width>720</width>
                <!-- Top Row -->
                <control type="group">
                    <centertop>100</centertop>
                    <height>view_pad</height>
                    <include content="Object_Hidden_Button">
                        <param name="id">9001</param>
                        <include>MediaFilter_Node_ClearAll</include>
                        <onfocus condition="Window.IsVisible(MyVideoNav.xml) + [Container.Content(movies) | Container.Content(sets)]">SetProperty(MediaFilter.ContentType,Movies)</onfocus>
                        <onfocus condition="Window.IsVisible(MyVideoNav.xml) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">SetProperty(MediaFilter.ContentType,TV)</onfocus>
                        <onfocus condition="Window.IsVisible(MyMusicNav.xml)">SetProperty(MediaFilter.ContentType,Music)</onfocus>
                        <onfocus>SetProperty(View.WallSwitchPosition,1)</onfocus>
                        <onfocus>SetFocus(19)</onfocus>
                    </include>
                    <!-- Edit Control -->
                    <control type="edit" id="19">
                        <description>Filter</description>
                        <font>font_midi_black</font>
                        <textcolor>00ffffff</textcolor>
                        <selectedcolor>00ffffff</selectedcolor>
                        <disabledcolor>00ffffff</disabledcolor>
                        <focusedcolor>$VAR[ColorSelected]</focusedcolor>
                        <height>view_pad</height>
                        <textoffsetx>40</textoffsetx>
                        <align>left</align>
                        <onup>68</onup>
                        <ondown>9002</ondown>
                        <onright>9004</onright>
                        <onleft condition="$EXP[Exp_HomeMenu_DontHide]">308</onleft>
                        <!-- <onleft condition="$EXP[Exp_HomeMenu_DontHide]">ClearProperty(View.WallSwitchPosition)</onleft> -->
                        <onleft condition="$EXP[Exp_HomeMenu_DontHide]">SetProperty(List.ViewContainer,9001)</onleft>
                    </control>
                </control>
                <!-- Alphabet and Autocomplete -->
                <control type="group">
                    <top>140</top>
                    <left>0</left>
                    <!-- <include>Search_View_Visible_OnEdit</include> -->
                    <include content="Search_Filter_Alphabet">
                        <param name="rowone">9002</param>
                        <param name="rowtwo">9003</param>
                        <param name="editid">19</param>
                        <param name="ondown">9500</param>
                        <param name="onback">68</param>
                    </include>
                </control>
            </control>
            <control type="grouplist" id="9000">
                <left>870</left>
                <centertop>100</centertop>
                <itemgap>0</itemgap>
                <orientation>horizontal</orientation>
                <height>160</height>
                <right>-20</right>
                <onleft>SetFocus(9001)</onleft>
                <onback>68</onback>
                <onup>SetFocus(68)</onup>
                <ondown>SetFocus(68)</ondown>
                <onright>noop</onright>

                <include content="Dialog_Side_Button">
                    <param name="vertical">false</param>
                    <param name="id">04</param>
                    <param name="label">$LOCALIZE[587]</param>
                    <param name="icon">$VAR[Image_Filtered]</param>
                    <param name="textcolor">main_fg</param>
                    <param name="nf_opacity">30</param>
                    <param name="db_opacity">12</param>
                    <param name="visible">Container.CanFilterAdvanced</param>
                    <onclick>SetProperty(DialogSettings.Style,mediafilter,Home)</onclick>
                    <onclick>Filter</onclick>
                </include>
                <include content="Dialog_Side_Button">
                    <param name="vertical">false</param>
                    <param name="id">05</param>
                    <param name="label">$LOCALIZE[192]</param>
                    <param name="icon">special://skin/extras/icons/triangle-exclamation.png</param>
                    <param name="textcolor">main_fg</param>
                    <param name="nf_opacity">30</param>
                    <param name="db_opacity">12</param>
                    <param name="visible">!Container.CanFilterAdvanced</param>
                    <onclick>RunScript(script.skinvariables,set_editcontrol=19,window_id=1105,setfocus=9001)</onclick>
                    <onclick>ClearProperty(MediaFilter.Genre)</onclick>
                    <onclick>ClearProperty(MediaFilter.Studio)</onclick>
                    <onclick>ClearProperty(MediaFilter.Country)</onclick>
                    <onclick>ClearProperty(MediaFilter.MPAA)</onclick>
                    <onclick>ClearProperty(MediaFilter.Director)</onclick>
                    <onclick>ClearProperty(MediaFilter.Writer)</onclick>
                </include>
                <include content="Dialog_Side_Button">
                    <param name="vertical">false</param>
                    <param name="id">06</param>
                    <param name="label">$VAR[Label_Watched]</param>
                    <param name="icon">$VAR[Image_Watched]</param>
                    <param name="visible">Window.IsVisible(videos)</param>
                    <param name="textcolor">main_fg</param>
                    <param name="nf_opacity">30</param>
                    <param name="db_opacity">12</param>
                    <onclick>SendClick(14)</onclick>
                </include>
                <include content="Dialog_Side_Button">
                    <param name="vertical">false</param>
                    <param name="id">07</param>
                    <param name="label">$VAR[Label_SortMethod]</param>
                    <param name="icon">special://skin/extras/icons/sort.png</param>
                    <param name="visible">Window.IsMedia</param>
                    <param name="textcolor">main_fg</param>
                    <param name="nf_opacity">30</param>
                    <param name="db_opacity">12</param>
                    <onclick>SetProperty(DialogSelectType,Menu,Home)</onclick>
                    <onclick condition="![Window.IsMedia + String.IsEqual(Container.FolderName,Skin Variables) + !String.IsEmpty(Window.Property(MediaFilter.BaseDir.Name))]">SendClick(3)</onclick>
                    <onclick condition="Window.IsMedia + String.IsEqual(Container.FolderName,Skin Variables) + !String.IsEmpty(Window.Property(MediaFilter.BaseDir.Name))">RunScript(script.skinvariables,run_dialog=select,heading=$LOCALIZE[581],separator=||,list=title||genre||year||rating||playcount||director||originaltitle||lastplayed||writer||studio||mpaa||country||premiered||top250||votes,"executebuiltin=SetProperty(MediaFilter.SortBy,{v})||route=run_executebuiltin=special://skin/shortcuts/builtins/skinvariables-mediafilter.json&amp;use_rules=True")</onclick>
                </include>
                <include content="Dialog_Side_Button">
                    <param name="vertical">false</param>
                    <param name="id">08</param>
                    <param name="label">$VAR[Label_SortDirection]</param>
                    <param name="icon">$VAR[Image_SortDirection]</param>
                    <param name="visible">Window.IsMedia</param>
                    <param name="textcolor">main_fg</param>
                    <param name="nf_opacity">30</param>
                    <param name="db_opacity">12</param>
                    <onclick>SetProperty(DialogSelectType,Menu,Home)</onclick>
                    <onclick condition="![Window.IsMedia + String.IsEqual(Container.FolderName,Skin Variables) + !String.IsEmpty(Window.Property(MediaFilter.BaseDir.Name))]">SendClick(4)</onclick>

                    <onclick condition="!String.IsEqual(Window.Property(MediaFilter.SortHow),desc) + Window.IsMedia + String.IsEqual(Container.FolderName,Skin Variables) + !String.IsEmpty(Window.Property(MediaFilter.BaseDir.Name))">SetProperty(MediaFilter.SortHow,desc)</onclick>
                    <onclick condition="String.IsEqual(Window.Property(MediaFilter.SortHow),desc) + Window.IsMedia + String.IsEqual(Container.FolderName,Skin Variables) + !String.IsEmpty(Window.Property(MediaFilter.BaseDir.Name))">ClearProperty(MediaFilter.SortHow)</onclick>

                    <onclick condition="Window.IsMedia + String.IsEqual(Container.FolderName,Skin Variables) + !String.IsEmpty(Window.Property(MediaFilter.BaseDir.Name))">RunScript(script.skinvariables,"run_executebuiltin=special://skin/shortcuts/builtins/skinvariables-mediafilter.json",use_rules)</onclick>
                </include>
                <include content="Dialog_Side_Button">
                    <param name="vertical">false</param>
                    <param name="id">09</param>
                    <param name="label">$LOCALIZE[31319]</param>
                    <param name="icon">special://skin/extras/icons/object-group.png</param>
                    <param name="textcolor">main_fg</param>
                    <param name="nf_opacity">30</param>
                    <param name="db_opacity">12</param>
                    <onclick>Runscript(script.skinvariables,action=buildviews,contentid=$VAR[Items_ViewMode_Switch],pluginname=$INFO[Container.PluginName])</onclick>
                </include>
            </control>
            <include>MediaFilter_Node_Filters</include>
        </control>
        <include>MediaFilter_Node_Dialog</include>
    </include>

    <include name="MediaFilter_Discover_Node">


        <include content="Dialog_Overlay_Side">
            <param name="dialog_size">Dimension_DialogSideMenu</param>
            <include>Animation_Right_Delay</include>
            <visible>Control.IsVisible(55)</visible>
            <!-- <visible allowhiddenfocus="true">!Control.HasFocus(553)</visible> -->
            <include content="Dialog_Head">
                <param name="label">[CAPITALIZE]$INFO[Container(55).ListItemAbsolute(0).Label][/CAPITALIZE]</param>
            </include>
            <include content="Dialog_Body">
                <include content="Dialog_Body_Group">
                    <include content="List_DialogSelect">
                        <param name="id">55</param>
                        <param name="textcolor">dialog_fg</param>
                        <movement>8</movement>
                        <!-- <onleft>553</onleft> -->
                        <onleft>SetFocus(55,0,absolute)</onleft>
                        <onleft>Action(Select)</onleft>
                        <onright>550</onright>
                        <visible>$EXP[Exp_View_55]</visible>
                        <onfocus>SetProperty(TMDbHelper.WidgetContainer,553)</onfocus>
                    </include>
                </include>
                <include content="Dialog_Side_Grouplist">
                    <param name="id">550</param>
                    <onleft>55</onleft>
                    <include content="Dialog_Side_Button">
                        <param name="baseid">55</param>
                        <param name="id">01</param>
                        <param name="label">Movies</param>
                        <param name="icon">special://skin/extras/icons/binoculars.png</param>
                        <param name="visible">String.IsEqual(Container(55).ListItemAbsolute(0).Property(Param.TMDb_Type),movie)</param>
                        <onclick>Container.Update(plugin://plugin.video.themoviedb.helper/?info=user_discover&amp;tmdb_type=tv)</onclick>
                    </include>
                    <include content="Dialog_Side_Button">
                        <param name="baseid">55</param>
                        <param name="id">02</param>
                        <param name="label">TV Shows</param>
                        <param name="icon">special://skin/extras/icons/binoculars.png</param>
                        <param name="visible">String.IsEqual(Container(55).ListItemAbsolute(0).Property(Param.TMDb_Type),tv)</param>
                        <onclick>Container.Update(plugin://plugin.video.themoviedb.helper/?info=user_discover&amp;tmdb_type=movie)</onclick>
                    </include>

                    <include content="Dialog_Side_Button">
                        <param name="baseid">55</param>
                        <param name="id">03</param>
                        <param name="label">Match</param>
                        <param name="icon">special://skin/extras/icons/scale-unbalanced.png</param>
                        <param name="visible">true</param>
                        <onclick>Container.Update($INFO[Container(55).ListItemAbsolute(1).FolderPath])</onclick>
                    </include>

                    <include content="Dialog_Side_Button">
                        <param name="baseid">55</param>
                        <param name="id">04</param>
                        <param name="label">Sort</param>
                        <param name="icon">special://skin/extras/icons/sort2.png</param>
                        <param name="visible">true</param>
                        <onclick>Container.Update($INFO[Container(55).ListItemAbsolute(2).FolderPath])</onclick>
                    </include>

                    <include content="Dialog_Side_Button">
                        <param name="baseid">55</param>
                        <param name="id">05</param>
                        <param name="label">Add Rule</param>
                        <param name="icon">special://skin/extras/icons/circle-plus.png</param>
                        <param name="visible">true</param>
                        <onclick>Container.Update(plugin://plugin.video.themoviedb.helper/?info=user_discover&amp;method=add_rule&amp;tmdb_type=movie)</onclick>
                    </include>

                    <include content="Dialog_Side_Button">
                        <param name="baseid">55</param>
                        <param name="id">06</param>
                        <param name="label">Clear</param>
                        <param name="icon">special://skin/extras/icons/triangle-exclamation.png</param>
                        <param name="visible">true</param>
                        <onclick>Container.Update(plugin://plugin.video.themoviedb.helper/?info=user_discover&amp;method=clear&amp;tmdb_type=movie)</onclick>
                    </include>

                    <include content="Dialog_Side_Button">
                        <param name="baseid">55</param>
                        <param name="id">07</param>
                        <param name="label">Save</param>
                        <param name="icon">special://skin/extras/icons/floppy-disk.png</param>
                        <param name="visible">true</param>
                        <onclick>Container.Update(plugin://plugin.video.themoviedb.helper/?info=user_discover&amp;method=save&amp;tmdb_type=movie)</onclick>
                    </include>
                </include>
            </include>
        </include>
    </include>

</includes>
