<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="View_MediaWindows_ID">
        <views>50,51,52,502,512,522,55,500,56,516</views>
    </include>

    <include name="View_Row_Header">
        <definition>
            <control type="group">
                <visible>!$EXP[Exp_InfoDialogs]</visible>
                <visible>!Window.IsVisible(DialogAddonSettings.xml)</visible>
                <visible>!Window.IsVisible(DialogGameControllers.xml)</visible>
                <visible>!Window.IsVisible(DialogPVRChannelManager.xml)</visible>
                <visible>!Window.IsVisible(DialogPVRGroupManager.xml)</visible>
                <include content="Furniture_Top">
                    <param name="label">$PARAM[label]</param>
                </include>

            </control>
        </definition>
    </include>

    <include name="View_Dialog_Plot">
        <param name="visible">Window.IsActive(1113)</param>
        <definition>
            <include content="DialogInfo_PlotBox">
                <param name="visible">Window.IsActive(1113)</param>
            </include>
        </definition>
    </include>

    <include name="View_Scrollbar_V">
        <param name="onright">menu</param>
        <param name="onleft">50</param>
        <param name="id">60</param>
        <definition>
            <control type="group">
                <nested />
                <width>view_pad</width>
                <right>0</right>
                <bottom>view_top</bottom>
                <control type="group">
                    <width>scrollbar_w</width>
                    <centerright>50%</centerright>
                    <visible allowhiddenfocus="true">Control.HasFocus($PARAM[id])</visible>
                    <control type="image">
                        <texture colordiffuse="main_fg_12">common/white.png</texture>
                        <width>1</width>
                        <centerright>50%</centerright>
                    </control>
                    <control type="scrollbar" id="$PARAM[id]">
                        <onleft>$PARAM[onleft]</onleft>
                        <onright>$PARAM[onright]</onright>
                        <onup>$PARAM[onup]</onup>
                        <ondown>$PARAM[ondown]</ondown>
                        <onback>$PARAM[onback]</onback>
                        <orientation>vertical</orientation>
                        <texturesliderbackground />
                        <texturesliderbar colordiffuse="00ffffff" border="4">scrollbar/scrollv_line.png</texturesliderbar>
                        <include>Texture_Scrollbar_V</include>
                    </control>
                </control>
            </control>
        </definition>
    </include>

    <include name="View_Scrollbars">
        <include content="Furniture_Bottombar_Group">

            <!-- Wall Action -->
            <include content="Object_Hidden_Button">
                <param name="id">68</param>
                <onfocus condition="![$EXP[Exp_FilterWall_IsMedia]]">SetFocus(50)</onfocus>
                <onfocus condition="![$EXP[Exp_FilterWall_IsMedia]]">ClearProperty(MediaFilterBase)</onfocus>
                <onfocus>ClearProperty(View.WallSwitchRow)</onfocus>
                <onfocus condition="$EXP[Exp_FilterWall_IsMedia]">Runscript(script.skinvariables,$VAR[MediaWall_ScriptTypeDef],use_rules,id=$VAR[Action_View_ContentID],win_prop=WallSlideOut,focus_id=63,clear_prop_one=MediaFilterBase,clear_prop_two=View.WallSwitchPosition)</onfocus>
            </include>

            <!-- Dummy for bouncing focus back to view on back -->
            <include content="Object_Hidden_Button">
                <param name="id">62</param>
                <onfocus>SetFocus($VAR[Action_View_ContentID])</onfocus>
            </include>
            <include content="Object_Hidden_Button">
                <param name="id">63</param>
                <animation effect="fade" start="0" end="0" time="600" reversible="false">Focus</animation>
                <onfocus>SetFocus($VAR[Action_View_ContentID])</onfocus>
            </include>

            <!-- Dummy for moving scrollbar -->
            <include content="Object_Hidden_Button">
                <param name="id">64</param>
                <include>Action_Scrollbar</include>
                <include>MediaFilter_Node_ClearAll</include>
                <onfocus>ClearProperty(View.WallSwitchRow)</onfocus>
                <onleft condition="!Integer.IsEqual(Container.CurrentPage,1)">SetFocus($VAR[Action_View_ContentID])</onleft>
                <onleft condition="!Integer.IsEqual(Container.CurrentPage,1)">Action(PageUp)</onleft>
                <onleft condition="!Integer.IsEqual(Container.CurrentPage,1) + $EXP[Exp_FilterWall_IsMedia]">Action(PageUp)</onleft>
                <onleft condition="!Integer.IsEqual(Container.CurrentPage,1)">SetFocus(64)</onleft>
                <onleft condition="Integer.IsEqual(Container.CurrentPage,1)">SetProperty(List.ViewContainer.Bump,1)</onleft>
                <onleft condition="Integer.IsEqual(Container.CurrentPage,1)">SetProperty(List.ViewContainer,64)</onleft>
                <onleft condition="Integer.IsEqual(Container.CurrentPage,1)">332</onleft>
                <onright condition="Container.HasNext">SetFocus($VAR[Action_View_ContentID])</onright>
                <onright condition="Container.HasNext">Action(PageDown)</onright>
                <onright condition="Container.HasNext + $EXP[Exp_FilterWall_IsMedia]">Action(PageDown)</onright>
                <onright condition="Container.HasNext">SetFocus(64)</onright>
                <onright condition="!Container.HasNext">SetProperty(List.ViewContainer,64)</onright>
                <onright condition="!Container.HasNext">332</onright>
            </include>

            <!-- Scrollbar -->
            <control type="group">
                <height>scrollbar_w</height>
                <centertop>-520</centertop>
                <width>680</width>
                <visible>!$EXP[Exp_InfoDialogs]</visible>
                <visible>$EXP[Exp_MediaFilterVisible]</visible>
                <include content="Animation_Fade_In">
                    <param name="delay">0</param>
                    <param name="type">Visible</param>
                </include>
                <control type="image">
                    <texture colordiffuse="main_fg_12">common/white.png</texture>
                    <height>1</height>
                    <centertop>50%</centertop>
                </control>
                <control type="scrollbar" id="60">
                    <orientation>horizontal</orientation>
                    <texturesliderbackground />
                    <include>Texture_Scrollbar_SliderBar_H</include>
                    <include>Texture_Scrollbar_H</include>
                    <showonepage>true</showonepage>
                    <include>Action_Scrollbar</include>
                    <onfocus>SetFocus(64)</onfocus>
                    <visible>$EXP[Exp_ScrollbarVisible]</visible>
                </control>

                <control type="group">
                    <height>20</height>
                    <top>20</top>
                    <!-- <visible>$EXP[Exp_ScrollbarVisible]</visible> -->
                    <control type="label">
                        <align>left</align>
                        <font>font_hint_black</font>
                        <textcolor>main_fg_30</textcolor>
                        <label>$INFO[Container.NumItems,, $LOCALIZE[31022]]</label>
                    </control>
                    <control type="label">
                        <align>right</align>
                        <font>font_hint_black</font>
                        <textcolor>main_fg_30</textcolor>
                        <label>$LOCALIZE[31135] $INFO[Container.CurrentPage,, $LOCALIZE[20163] ]$INFO[Container.NumPages]</label>
                    </control>
                </control>
            </control>
        </include>
    </include>

    <include name="View_Row_Info">
        <control type="group">
            <visible>!$EXP[Exp_InfoDialogs]</visible>
            <include>Animation_Transition_InfoPanel_Hide</include>

            <control type="group">
                <include>MediaWall_Info_Transition</include>
                <include content="Info_Panel">
                    <top>view_top</top>
                    <width>info_panel_w</width>
                    <left>view_side</left>
                    <visible>String.IsEmpty(Window.Property(TMDBHelper.WidgetContainer))</visible>
                </include>
                <include content="View_Combined_Info" condition="$EXP[Exp_View_502_Include]"><param name="id">50</param></include>
                <include content="View_Combined_Info" condition="$EXP[Exp_View_512_Include]"><param name="id">51</param></include>
                <include content="View_Combined_Info" condition="$EXP[Exp_View_522_Include]"><param name="id">52</param></include>
                <include content="View_Combined_Info"><param name="id">55</param></include>
            </control>

            <control type="group">
                <visible>![$EXP[Exp_FilterWall_IsMedia] | $EXP[Exp_FilterWall_IsDiscover]]</visible>
                <include content="Info_Viewline">
                    <param name="sort_condition">true</param>
                    <param name="library_condition">true</param>
                </include>
            </control>
        </control>
    </include>

    <include name="View_Row_Items">
        <control type="group">
            <include>Animation_Half_WindowChange</include>

            <include condition="$EXP[Exp_View_502_Include]">View_502_Square_Combined_Row</include>
            <include condition="$EXP[Exp_View_512_Include]">View_512_Landscape_Combined_Row</include>
            <include condition="$EXP[Exp_View_522_Include]">View_522_Poster_Combined_Row</include>

            <control type="group">
                <include>MediaWall_View_Transition</include>
                <include condition="$EXP[Exp_View_50_Include]">View_050_Square_Row</include>
                <include condition="$EXP[Exp_View_51_Include]">View_051_Landscape_Row</include>
                <include condition="$EXP[Exp_View_52_Include]">View_052_Poster_Row</include>
                <include condition="$EXP[Exp_View_56_Include]">View_056_MediaList</include>
                <include condition="$EXP[Exp_View_516_Include]">View_516_Landscape_MediaList</include>
                <include condition="$EXP[Exp_View_500_Include]">View_500_Square_List</include>

                <include content="Widget_Busy">
                    <param name="label">$VAR[Label_Section_Main]</param>
                    <param name="visible">Container.Content() + Integer.IsEqual(Container.NumItems,0)</param>
                    <height>divider_bottom</height>
                    <bottom>46</bottom>
                    <left>200</left>
                </include>
            </control>
        </control>
    </include>

    <include name="View_Row_Gutter">
        <control type="group">
            <include>Animation_Half_WindowChange</include>
            <visible>!$EXP[Exp_InfoDialogs]</visible>
            <control type="group">
                <include>View_Scrollbars</include>
            </control>
            <control type="group">
                <visible>!Control.HasFocus(65)</visible>
                <visible>$EXP[Exp_FurnitureVisible]</visible>

                <visible>![$EXP[Exp_MediaFilterVisible] + [$EXP[Exp_FilterWall_IsMedia] | $EXP[Exp_FilterWall_IsDiscover]]]</visible>

                <include content="Animation_Fade_In">
                    <param name="delay">200</param>
                    <param name="type">Visible</param>
                </include>

                <control type="group">
                    <visible>[$EXP[Exp_ScrollbarVisible] | $EXP[Exp_FilterWall_IsMedia] | $EXP[Exp_FilterWall_IsDiscover]] | !Skin.HasSetting(Furniture.DisableCount)</visible>
                    <include content="Object_Control">
                        <param name="control">grouplist</param>
                        <hitrect x="0" y="0" w="0" h="0" />
                        <orientation>horizontal</orientation>
                        <itemgap>30</itemgap>
                        <height>80</height>
                        <centerbottom>100</centerbottom>
                        <usecontrolcoords>true</usecontrolcoords>
                        <left>120</left>
                        <control type="group">
                            <width>50</width>
                        </control>
                        <include content="Info_Codec_Label">
                            <param name="icon">$VAR[Image_Scrollbar_NumItems]</param>
                            <param name="icon">special://skin/extras/icons/grip.png</param>
                            <param name="label">$VAR[Label_Scrollbar_NumItems]</param>
                        </include>
                    </include>
                </control>

                <control type="group">
                    <visible>![$EXP[Exp_ScrollbarVisible] | $EXP[Exp_FilterWall_IsMedia] | $EXP[Exp_FilterWall_IsDiscover]]</visible>
                    <control type="group">
                        <visible>Skin.HasSetting(Furniture.DisableCount)</visible>
                        <include content="Furniture_Bottom_Left">
                            <visible>![$EXP[Exp_View_502] | $EXP[Exp_View_512] | $EXP[Exp_View_522]]</visible>
                        </include>
                        <include content="Furniture_Bottom_Left">
                            <param name="container">Container(503).</param>
                            <visible>$EXP[Exp_View_502] + Skin.HasSetting(Views.UseAltCombined)</visible>
                        </include>
                        <include content="Furniture_Bottom_Left">
                            <param name="container">Container(513).</param>
                            <visible>$EXP[Exp_View_512] + Skin.HasSetting(Views.UseAltCombined)</visible>
                        </include>
                        <include content="Furniture_Bottom_Left">
                            <param name="container">Container(523).</param>
                            <visible>$EXP[Exp_View_522] + Skin.HasSetting(Views.UseAltCombined)</visible>
                        </include>
                    </control>
                    <include>Furniture_Bottom_Right</include>
                </control>
            </control>
        </control>
    </include>

    <include name="View_Bumper">
        <param name="groupid">320</param>
        <param name="menuid">303</param>
        <definition>
            <control type="button" id="330">
                <width>1</width>
                <height>1</height>
                <left>-1000</left>
                <onfocus condition="!String.IsEmpty(Window.Property(List.ViewContainer))">SetFocus($INFO[Window.Property(List.ViewContainer)])</onfocus>
                <onfocus condition="String.IsEmpty(Window.Property(List.ViewContainer))">SetFocus($PARAM[groupid])</onfocus>
                <onclick>SetFocus($PARAM[groupid])</onclick>
                <visible allowhiddenfocus="true">Control.HasFocus(330)</visible>
                <animation effect="fade" time="300" start="0" end="0">Focus</animation>
            </control>
            <control type="button" id="331">
                <width>1</width>
                <height>1</height>
                <left>-1000</left>
                <onfocus>SetFocus($PARAM[menuid])</onfocus>
                <onclick>SetFocus($PARAM[menuid])</onclick>
                <visible allowhiddenfocus="true">Control.HasFocus(331)</visible>
                <animation effect="fade" time="300" start="0" end="0">Focus</animation>
            </control>
            <control type="button" id="332">
                <width>1</width>
                <height>1</height>
                <left>-1000</left>
                <onfocus condition="!String.IsEmpty(Window.Property(List.ViewContainer))">SetFocus($INFO[Window.Property(List.ViewContainer)])</onfocus>
                <onfocus condition="String.IsEmpty(Window.Property(List.ViewContainer))">SetFocus($PARAM[groupid])</onfocus>
                <onclick>SetFocus($PARAM[groupid])</onclick>
                <visible allowhiddenfocus="true">Control.HasFocus(332)</visible>
                <animation effect="fade" time="300" start="0" end="0">Focus</animation>
            </control>
            <control type="button" id="333">
                <width>1</width>
                <height>1</height>
                <left>-1000</left>
                <onfocus condition="!String.IsEmpty(Window.Property(List.ViewContainer))">SetFocus($INFO[Window.Property(List.ViewContainer)])</onfocus>
                <onfocus condition="String.IsEmpty(Window.Property(List.ViewContainer))">SetFocus($PARAM[groupid])</onfocus>
                <onclick>SetFocus($PARAM[groupid])</onclick>
                <visible allowhiddenfocus="true">Control.HasFocus(333)</visible>
                <animation effect="fade" time="300" start="0" end="0">Focus</animation>
            </control>
            <include content="Object_Hidden_Button">
                <param name="id">393</param>
                <onfocus condition="Skin.HasSetting(Hub.Home.DisableSubmenu)">$VAR[Action_Menu_Position]</onfocus>
                <onfocus condition="!Skin.HasSetting(Hub.Home.DisableSubmenu)">SetFocus(300)</onfocus>
            </include>
        </definition>
    </include>

    <include name="View_Furniture_Edges">
        <include>Home_Fade</include>
        <control type="group">
            <control type="group">
                <visible>!Control.HasFocus(19)</visible>
                <include>View_Row_Header</include>
            </control>
            <include>View_Row_Gutter</include>
            <include>Animation_Group_Bumper</include>
        </control>
        <include content="Home_Menu">
            <param name="onlist">50</param>
        </include>
    </include>

    <include name="View_MediaWall">
        <control type="group">
            <animation effect="slide" start="0" end="0,334" time="400" tween="cubic" easing="out" reversible="false" condition="!String.IsEmpty(Window.Property(View.WallSwitchPosition))">Conditional</animation>
            <animation effect="slide" start="0,334" end="0" time="400" tween="cubic" easing="out" reversible="false" condition="String.IsEmpty(Window.Property(View.WallSwitchPosition))">Conditional</animation>

            <control type="group">
                <visible>$EXP[Exp_FilterWall_IsMedia] | $EXP[Exp_FilterWall_IsDiscover]</visible>
                <animation type="Conditional" reversible="false" condition="[$EXP[Exp_FilterWall_IsMedia] | $EXP[Exp_FilterWall_IsDiscover]]">
                    <effect type="slide" end="0,-334" start="0" time="400" delay="0" tween="cubic" easing="out" />
                </animation>
                <animation type="Conditional" reversible="false" condition="![$EXP[Exp_FilterWall_IsMedia] | $EXP[Exp_FilterWall_IsDiscover]]">
                    <effect type="slide" start="0,-334" end="0" time="400" delay="0" tween="cubic" easing="out" />
                </animation>
                <include content="Info_Viewline">
                    <param name="sort_condition">true</param>
                    <param name="library_condition">true</param>
                </include>
            </control>
            <include condition="Window.IsVisible(MyVideoNav.xml)">MediaWall_Discover</include>
            <include condition="$EXP[Exp_FilterWall_IsEnabled]">MediaWall_All</include>
        </control>
    </include>

    <include name="View_MediaFilter_Node">
        <include>MediaFilter_Node</include>
        <include>MediaFilter_Discover_Node</include>
    </include>

    <include name="View_Main">
        <definition>
            <include content="View_Bumper">
                <param name="groupid">50</param>
            </include>

            <include>Background_Main</include>
            <include>Background_Transition</include>

            <control type="group">
                <control type="group">
                    <include>Animation_Group_Bumper</include>
                    <animation effect="fade" start="100" end="0" condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Instance))">Conditional</animation>
                    <include>View_MediaWall</include>
                    <control type="group">
                        <include>Animation_View_WindowChange</include>
                        <include>View_Row_Items</include>
                        <include>View_Row_Info</include>
                    </control>
                    <include>View_MediaFilter_Node</include>
                </control>
                <include>View_Furniture_Edges</include>
            </control>

            <include>View_Dialog_Plot</include>

        </definition>
    </include>
</includes>