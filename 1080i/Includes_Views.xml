<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="View_MediaWindows_ID">
        <views>50,51,52,502,512,522,55,500</views>
    </include>

    <include name="View_Row_Header">
        <definition>
            <control type="group">
                <visible>!$EXP[Exp_InfoDialogs]</visible>
                <visible>!Window.IsVisible(DialogAddonSettings.xml)</visible>
                <visible>!Window.IsVisible(DialogGameControllers.xml)</visible>
                <visible>!Window.IsVisible(DialogPVRChannelManager.xml)</visible>
                <visible>!Window.IsVisible(DialogPVRGroupManager.xml)</visible>
                <visible>!Window.IsVisible(script-skinshortcuts.xml)</visible>
                <include content="Furniture_Top">
                    <param name="label">$PARAM[label]</param>
                </include>

            </control>
        </definition>
    </include>

    <include name="View_Dialog_Plot">
        <param name="visible">Window.IsActive(1113)</param>
        <definition>
            <include content="Dialog_Overlay_Side">
                <visible>$PARAM[visible]</visible>
                <include>Animation_Right_Delay</include>
                <include>Dimension_DialogWideMenu</include>
                <include content="Dialog_Head">
                    <param name="label">$VAR[Label_Title]</param>
                </include>
                <include content="Dialog_Body">
                    <include content="Dialog_Body_Group">
                        <control type="textbox">
                            <font>font_main_plot</font>
                            <textcolor>dialog_fg_70</textcolor>
                            <label>$VAR[Label_Overlay_PlotBox]</label>
                            <include content="Dimension_Padding">
                                <param name="pad">x02</param>
                            </include>
                        </control>
                    </include>
                </include>
            </include>
        </definition>
    </include>

    <include name="View_Scrollbar_V">
        <param name="onright">menu</param>
        <param name="onleft">50</param>
        <param name="id">63</param>
        <definition>
            <control type="group">
                <nested />
                <width>view_pad</width>
                <right>0</right>
                <bottom>view_top</bottom>
                <control type="group">
                    <width>scrollbar_w</width>
                    <centerright>50%</centerright>
                    <visible allowhiddenfocus="true">Control.HasFocus($PARAM[id])</visible>
                    <control type="image">
                        <texture colordiffuse="main_fg_12">common/white.png</texture>
                        <width>1</width>
                        <centerright>50%</centerright>
                    </control>
                    <control type="scrollbar" id="$PARAM[id]">
                        <onleft>$PARAM[onleft]</onleft>
                        <onright>$PARAM[onright]</onright>
                        <onup>$PARAM[onup]</onup>
                        <ondown>$PARAM[ondown]</ondown>
                        <onback>$PARAM[onback]</onback>
                        <orientation>vertical</orientation>
                        <texturesliderbackground />
                        <texturesliderbar colordiffuse="00ffffff" border="4">scrollbar/scrollv_line.png</texturesliderbar>
                        <include>Texture_Scrollbar_V</include>
                    </control>
                </control>
            </control>
        </definition>
    </include>

    <include name="View_Scrollbars">
        <include content="Furniture_Bottombar_Group">
            <include content="Object_Hidden_Button">
                <param name="id">68</param>
                <onfocus>ClearProperty(View.WallSwitchRow.Hold)</onfocus>
                <onfocus>ClearProperty(View.WallSwitchRow)</onfocus>
                <onfocus>SetFocus(50)</onfocus>
                <onfocus condition="String.IsEqual(Window.Property(View.WallSwitchRow.Action),Info)">Action(Info)</onfocus>
                <onfocus condition="String.IsEqual(Window.Property(View.WallSwitchRow.Action),Select)">Action(Select)</onfocus>
                <onfocus>ClearProperty(View.WallSwitchRow.Action)</onfocus>
                <animation effect="fade" start="0" end="0" time="600" reversible="false">Focus</animation>
            </include>
            <include content="Object_Hidden_Button">
                <param name="id">67</param>

                <onup condition="!String.IsEmpty(Window.Property(View.WallSwitchRow))">ClearProperty(View.WallSwitchRow)</onup>
                <onup condition="String.IsEmpty(Window.Property(View.WallSwitchRow))">SetProperty(View.WallSwitchRow.Action,None)</onup>
                <onup condition="String.IsEmpty(Window.Property(View.WallSwitchRow))">SetFocus(68)</onup>

                <ondown condition="String.IsEmpty(Window.Property(View.WallSwitchRow))">SetProperty(View.WallSwitchRow,1)</ondown>
                <!-- <ondown condition="!String.IsEmpty(Window.Property(View.WallSwitchRow))">SetProperty(View.WallSwitchRow.Action,None)</ondown>
                <ondown condition="!String.IsEmpty(Window.Property(View.WallSwitchRow))">SetFocus(68)</ondown> -->
                <include content="Action_ToScrollbar_OnDown">
                    <param name="condition">!String.IsEmpty(Window.Property(View.WallSwitchRow))</param>
                </include>
                <ondown condition="!String.IsEmpty(Window.Property(View.WallSwitchRow))">SetProperty(View.WallSwitchRow.Hold,1)</ondown>
                <ondown condition="!String.IsEmpty(Window.Property(View.WallSwitchRow))">ClearProperty(View.WallSwitchRow)</ondown>

                <onback>ClearProperty(View.WallSwitchRow)</onback>
                <onback>50</onback>

                <onclick condition="!String.IsEmpty(Window.Property(View.WallSwitchRow)) + Control.IsVisible(52)">Control.Move(52,1)</onclick>
                <onclick condition="!String.IsEmpty(Window.Property(View.WallSwitchRow)) + Control.IsVisible(51)">Control.Move(51,1)</onclick>
                <onclick condition="!String.IsEmpty(Window.Property(View.WallSwitchRow)) + Control.IsVisible(50)">Control.Move(50,1)</onclick>
                <onclick>SetProperty(View.WallSwitchRow.Action,Select)</onclick>
                <onclick>SetFocus(68)</onclick>

                <onleft>SetFocus(50)</onleft>
                <onleft>Action(Left)</onleft>
                <onleft>Action(Left)</onleft>
                <onleft>SetFocus(67)</onleft>

                <onright>SetFocus(50)</onright>
                <onright>Action(Right)</onright>
                <onright>Action(Right)</onright>
                <onright>SetFocus(67)</onright>

                <oninfo condition="!String.IsEmpty(Window.Property(View.WallSwitchRow)) + Control.IsVisible(52)">Control.Move(52,1)</oninfo>
                <oninfo condition="!String.IsEmpty(Window.Property(View.WallSwitchRow)) + Control.IsVisible(51)">Control.Move(51,1)</oninfo>
                <oninfo condition="!String.IsEmpty(Window.Property(View.WallSwitchRow)) + Control.IsVisible(50)">Control.Move(50,1)</oninfo>
                <oninfo>SetProperty(View.WallSwitchRow.Action,Info)</oninfo>
                <oninfo>SetFocus(68)</oninfo>
            </include>
            <include content="Object_Hidden_Button">
                <param name="id">62</param>
                <onfocus>SetFocus(50)</onfocus>
            </include>
            <include content="Object_Hidden_Button">
                <param name="id">64</param>
                <include>Action_Scrollbar</include>
                <onleft>SetFocus(50)</onleft>
                <onleft condition="[Container.HasPrevious | Skin.String(Rows.ContentLoopback,Wrap)]">Action(PageUp)</onleft>
                <onleft condition="[Container.HasPrevious | Skin.String(Rows.ContentLoopback,Wrap)] + $EXP[Exp_FilterWall_IsMedia]">Action(PageUp)</onleft>
                <onleft>SetFocus(64)</onleft>
                <onright>SetFocus(50)</onright>
                <onright condition="[Container.HasNext | Skin.String(Rows.ContentLoopback,Wrap)]">Action(PageDown)</onright>
                <onright condition="[Container.HasNext | Skin.String(Rows.ContentLoopback,Wrap)] + $EXP[Exp_FilterWall_IsMedia]">Action(PageDown)</onright>
                <onright>SetFocus(64)</onright>
            </include>
            <control type="group">
                <height>scrollbar_w</height>
                <centertop>-40</centertop>
                <control type="image">
                    <texture colordiffuse="main_fg_12">common/white.png</texture>
                    <height>1</height>
                    <centertop>50%</centertop>
                    <visible>$EXP[Exp_ScrollbarVisible]</visible>
                </control>
                <control type="scrollbar" id="60">
                    <orientation>horizontal</orientation>
                    <texturesliderbackground />
                    <texturesliderbar border="4">special://profile/addon_data/script.texturemaker/ArcticFuse/scrollh_h.png</texturesliderbar>
                    <include>Texture_Scrollbar_H</include>
                    <showonepage>true</showonepage>
                    <include>Action_Scrollbar</include>
                    <onfocus>SetFocus(64)</onfocus>
                    <visible allowhiddenfocus="true">$EXP[Exp_ScrollbarVisible]</visible>
                </control>
            </control>
            <control type="grouplist">
                <visible>$EXP[Exp_ItemCountVisible]</visible>
                <hitrect x="0" y="0" w="0" h="0" />
                <orientation>horizontal</orientation>
                <itemgap>30</itemgap>
                <height>80</height>
                <centertop>50%</centertop>
                <usecontrolcoords>true</usecontrolcoords>
                <left>-80</left>
                <control type="group">
                    <width>50</width>
                </control>
                <include content="Info_Codec_Label">
                    <param name="icon">special://skin/extras/icons/grip.png</param>
                    <param name="label">$VAR[Label_Scrollbar_NumItems]</param>
                </include>
                <include content="Info_Codec_Label">
                    <param name="icon">special://skin/extras/icons/square-poll-horizontal.png</param>
                    <param name="label">$VAR[Label_Scrollbar_NumPages]</param>
                </include>
            </control>
            <include content="Object_Hidden_Button">
                <param name="id">65</param>

                <onleft>SetFocus(50)</onleft>
                <onleft>Action(prevletter)</onleft>
                <!-- <onleft condition="!Container.HasPrevious">Action(PageUp)</onleft>
                <onleft condition="!Container.HasPrevious">Action(Left)</onleft> -->
                <!-- <onleft condition="Container.HasPrevious + $EXP[Exp_FilterWall_IsMedia]">Action(PageUp)</onleft>
                <onleft condition="Container.HasPrevious + $EXP[Exp_FilterWall_IsMedia]">Action(PageUp)</onleft>
                <onleft condition="!$EXP[Exp_FilterWall_IsMedia]">Action(prevletter)</onleft>
                <onleft condition="!Container.HasPrevious + !$EXP[Exp_FilterWall_IsMedia]">Action(PageUp)</onleft>
                <onleft condition="!Container.HasPrevious + !$EXP[Exp_FilterWall_IsMedia]">Action(Left)</onleft> -->
                <onleft>SetFocus(65)</onleft>

                <onright>SetFocus(50)</onright>
                <onright>Action(nextletter)</onright>
                <!-- <onright condition="[!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)]">Action(jumpsms2)</onright>
                <onright condition="[!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)]">Action(prevletter)</onright>
                <onright condition="[!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)]">Action(prevletter)</onright>
                <onright condition="[!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)]">Action(prevletter)</onright> -->
                <!-- <onright condition="Container.HasNext + $EXP[Exp_FilterWall_IsMedia]">Action(PageDown)</onright>
                <onright condition="Container.HasNext + $EXP[Exp_FilterWall_IsMedia]">Action(PageDown)</onright>
                <onright condition="!$EXP[Exp_FilterWall_IsMedia]">Action(nextletter)</onright>
                <onright condition="[!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)] + !$EXP[Exp_FilterWall_IsMedia]">Action(jumpsms2)</onright>
                <onright condition="[!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)] + !$EXP[Exp_FilterWall_IsMedia]">Action(prevletter)</onright>
                <onright condition="[!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)] + !$EXP[Exp_FilterWall_IsMedia]">Action(prevletter)</onright>
                <onright condition="[!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)] + !$EXP[Exp_FilterWall_IsMedia]">Action(prevletter)</onright> -->
                <onright>SetFocus(65)</onright>

                <include>Action_Scrollbar</include>
            </include>

            <include content="Object_Control" condition="!Skin.HasSetting(DisableAlphabetScrollbar)">
                <param name="control">grouplist</param>
                <visible>$EXP[Exp_AlphabetVisible]</visible>
                <orientation>horizontal</orientation>
                <centertop>50%</centertop>
                <height>40</height>
                <itemgap>21.5</itemgap>
                <include>Object_AlphabetNumber</include>
                <include content="Object_AlphabetLetter"><param name="letter">A</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">B</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">C</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">D</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">E</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">F</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">G</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">H</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">I</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">J</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">K</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">L</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">M</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">N</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">O</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">P</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">Q</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">R</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">S</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">T</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">U</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">V</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">W</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">X</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">Y</param></include>
                <include content="Object_AlphabetLetter"><param name="letter">Z</param></include>
            </include>
        </include>
    </include>

    <include name="View_Row_Info">
        <control type="group">
            <visible>!$EXP[Exp_InfoDialogs]</visible>
            <include>Animation_Transition_InfoPanel_Hide</include>

            <control type="group">
                <include>MediaFilter_Info_Transition</include>
                <include content="Info_Panel">
                    <top>view_top</top>
                    <width>info_panel_w</width>
                    <left>view_side</left>
                    <visible>String.IsEmpty(Window.Property(TMDBHelper.WidgetContainer))</visible>
                </include>
                <include content="View_Combined_Info"><param name="id">50</param></include>
                <include content="View_Combined_Info"><param name="id">51</param></include>
                <include content="View_Combined_Info"><param name="id">52</param></include>
                <include content="View_Combined_Info"><param name="id">55</param></include>
            </control>

            <control type="group">
                <animation type="Conditional" reversible="false" condition="$EXP[Exp_FilterWall_IsMedia]">
                    <effect type="slide" end="0,-334" start="0" time="400" delay="mf_delay_v_2" tween="cubic" easing="out" />
                </animation>
                <animation type="Conditional" reversible="false" condition="!$EXP[Exp_FilterWall_IsMedia]">
                    <effect type="slide" start="0,-334" end="0" time="400" delay="mf_delay_h_2" tween="cubic" easing="out" />
                </animation>

                <include content="Info_Viewline">
                    <param name="sort_condition">true</param>
                    <param name="library_condition">true</param>
                </include>
            </control>
        </control>
    </include>

    <include name="View_Row_Items">
        <control type="group">
            <include>Animation_Half_WindowChange</include>
            <include>MediaFilter_View_Transition</include>
            <include>View_050_Square_Row</include>
            <include>View_051_Landscape_Row</include>
            <include>View_052_Poster_Row</include>
            <include>View_502_Square_Combined_Row</include>
            <include>View_512_Landscape_Combined_Row</include>
            <include>View_522_Poster_Combined_Row</include>
            <include>View_500_Square_List</include>

            <include content="Widget_Busy">
                <param name="label">$VAR[Label_Section_Main]</param>
                <param name="visible">Container.Content() + Integer.IsEqual(Container.NumItems,0)</param>
                <height>divider_bottom</height>
                <bottom>46</bottom>
                <left>200</left>
            </include>
        </control>
    </include>

    <include name="View_Row_Gutter">
        <control type="group">
            <include>Animation_Half_WindowChange</include>
            <visible>!$EXP[Exp_InfoDialogs]</visible>
            <control type="group">
                <include>View_Scrollbars</include>
            </control>
            <control type="group">
                <visible>!$EXP[Exp_AlphabetVisible]</visible>
                <control type="group">
                    <visible>!$EXP[Exp_ItemCountVisible]</visible>
                    <control type="group">
                        <visible>String.IsEmpty(Window.Property(MediaFilterBase))</visible>
                        <include content="Animation_Fade_In">
                            <param name="delay">400</param>
                            <param name="type">Visible</param>
                        </include>
                        <include content="Furniture_Bottom_Left">
                            <visible>![$EXP[Exp_View_502] | $EXP[Exp_View_512] | $EXP[Exp_View_522]]</visible>
                        </include>
                        <include content="Furniture_Bottom_Left">
                            <param name="container">Container(503).</param>
                            <visible>$EXP[Exp_View_502] + Skin.HasSetting(Views.UseAltCombined)</visible>
                        </include>
                        <include content="Furniture_Bottom_Left">
                            <param name="container">Container(513).</param>
                            <visible>$EXP[Exp_View_512] + Skin.HasSetting(Views.UseAltCombined)</visible>
                        </include>
                        <include content="Furniture_Bottom_Left">
                            <param name="container">Container(523).</param>
                            <visible>$EXP[Exp_View_522] + Skin.HasSetting(Views.UseAltCombined)</visible>
                        </include>
                    </control>
                </control>
                <include>Furniture_Bottom_Right</include>
            </control>
        </control>
    </include>

    <include name="View_Furniture_Edges">
        <include>Home_Fade</include>
        <control type="group">
            <!-- <include>MediaFilter_Info_Transition</include> -->
            <include>View_Row_Header</include>
            <include>View_Row_Gutter</include>
        </control>
        <include content="Home_Menu">
            <param name="onlist">50</param>
        </include>
    </include>

    <include name="View_MediaFilter_Wall">
        <include condition="Window.IsVisible(MyVideoNav.xml)">MediaFilter_Discover_Wall</include>
        <include condition="$EXP[Exp_FilterWall_IsEnabled]">MediaFilter_Wall_All</include>
    </include>

    <include name="View_MediaFilter_Node">
        <include>MediaFilter_Node</include>
        <include>MediaFilter_Discover_Node</include>
    </include>

    <include name="View_Main">
        <definition>
            <include content="Home_Bumper">
                <param name="groupid">50</param>
            </include>

            <include>Background_Main</include>
            <include>Background_Transition</include>

            <control type="group">
                <animation effect="fade" start="100" end="0" condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Instance))">Conditional</animation>

                <include>View_MediaFilter_Wall</include>

                <control type="group">
                    <include>Animation_Group_Bumper</include>
                    <include>Animation_View_WindowChange</include>
                    <include>View_Row_Items</include>
                    <include>View_Row_Info</include>
                </control>

                <include>View_Furniture_Edges</include>
                <include>View_MediaFilter_Node</include>
            </control>

            <include>View_Dialog_Plot</include>

        </definition>
    </include>
</includes>