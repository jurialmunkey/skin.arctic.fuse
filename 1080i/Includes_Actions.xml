<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="Action_ButtonMenu_Onload">
        <onload condition="String.IsEmpty(Skin.String(OptionsTiles.Layout))">Skin.SetString(OptionsTiles.Layout,$NUMBER[3])</onload>

        <onload condition="String.IsEmpty(Skin.String(OptionsTiles.01.Include))">Skin.SetString(OptionsTiles.01.Include,NowPlaying)</onload>
        <onload condition="String.IsEmpty(Skin.String(OptionsTiles.02.Include))">Skin.SetString(OptionsTiles.02.Include,Settings)</onload>
        <onload condition="String.IsEmpty(Skin.String(OptionsTiles.03.Include))">Skin.SetString(OptionsTiles.03.Include,Weather)</onload>
        <onload condition="String.IsEmpty(Skin.String(OptionsTiles.04.Include))">Skin.SetString(OptionsTiles.04.Include,SystemInfo)</onload>

        <onload condition="!String.IsEmpty(Skin.String(OptionsTiles.01.Target)) + !String.IsEmpty(Skin.String(OptionsTiles.01.Path))">Skin.SetString(OptionsTiles.01.Onclick,ActivateWindow($INFO[Skin.String(OptionsTiles.01.Target)],$INFO[Skin.String(OptionsTiles.01.Path)],return))</onload>
        <onload condition="!String.IsEmpty(Skin.String(OptionsTiles.02.Target)) + !String.IsEmpty(Skin.String(OptionsTiles.02.Path))">Skin.SetString(OptionsTiles.02.Onclick,ActivateWindow($INFO[Skin.String(OptionsTiles.02.Target)],$INFO[Skin.String(OptionsTiles.02.Path)],return))</onload>
        <onload condition="!String.IsEmpty(Skin.String(OptionsTiles.03.Target)) + !String.IsEmpty(Skin.String(OptionsTiles.03.Path))">Skin.SetString(OptionsTiles.03.Onclick,ActivateWindow($INFO[Skin.String(OptionsTiles.03.Target)],$INFO[Skin.String(OptionsTiles.03.Path)],return))</onload>
        <onload condition="!String.IsEmpty(Skin.String(OptionsTiles.04.Target)) + !String.IsEmpty(Skin.String(OptionsTiles.04.Path))">Skin.SetString(OptionsTiles.04.Onclick,ActivateWindow($INFO[Skin.String(OptionsTiles.04.Target)],$INFO[Skin.String(OptionsTiles.04.Path)],return))</onload>

        <onload condition="String.IsEmpty(Skin.String(OptionsTiles.01.Target)) + !String.IsEmpty(Skin.String(OptionsTiles.01.Path))">Skin.SetString(OptionsTiles.01.Onclick,$INFO[Skin.String(OptionsTiles.01.Path)])</onload>
        <onload condition="String.IsEmpty(Skin.String(OptionsTiles.02.Target)) + !String.IsEmpty(Skin.String(OptionsTiles.02.Path))">Skin.SetString(OptionsTiles.02.Onclick,$INFO[Skin.String(OptionsTiles.02.Path)])</onload>
        <onload condition="String.IsEmpty(Skin.String(OptionsTiles.03.Target)) + !String.IsEmpty(Skin.String(OptionsTiles.03.Path))">Skin.SetString(OptionsTiles.03.Onclick,$INFO[Skin.String(OptionsTiles.03.Path)])</onload>
        <onload condition="String.IsEmpty(Skin.String(OptionsTiles.04.Target)) + !String.IsEmpty(Skin.String(OptionsTiles.04.Path))">Skin.SetString(OptionsTiles.04.Onclick,$INFO[Skin.String(OptionsTiles.04.Path)])</onload>
    </include>

    <variable name="Action_View_ContentID">
        <value condition="$EXP[Exp_View_522]">523</value>
        <value condition="$EXP[Exp_View_512]">513</value>
        <value condition="$EXP[Exp_View_502]">503</value>
        <value condition="$EXP[Exp_View_52]">52</value>
        <value condition="$EXP[Exp_View_51]">51</value>
        <value>50</value>
    </variable>

    <include name="Action_Media_Onload">
        <onload>RunScript(script.skinvariables,action=buildviews)</onload>
        <onload>ClearProperty(MediaFilterBase)</onload>
        <onunload>ClearProperty(MediaFilterBase)</onunload>
    </include>

    <variable name="Action_OSD_Main_OnDown">
        <value condition="VideoPlayer.Content(livetv) + !Skin.HasSetting(OSD.OnDown.DisablePVROSDGuide)">pvrosdguide</value>
        <value condition="VideoPlayer.Content(livetv)">$VAR[Action_OSD_PVROSDGuide_OnDown]</value>
        <value condition="$EXP[Exp_OSD_HasPlaylist] + !Skin.HasSetting(OSD.OnDown.Disable1140)">1140</value>
        <value condition="$EXP[Exp_OSD_HasPlaylist]">$VAR[Action_OSD_1140_OnDown]</value>
        <value condition="!Skin.HasSetting(OSD.OnDown.DisableVideoBookmarks)">videobookmarks</value>
        <value>$VAR[Action_OSD_VideoBookmarks_OnDown]</value>
    </variable>
    <variable name="Action_OSD_PVROSDGuide_OnDown">
        <value condition="!Skin.HasSetting(OSD.OnDown.DisablePVROSDChannels)">pvrosdchannels</value>
    </variable>
    <variable name="Action_OSD_1140_OnDown">
        <value condition="VideoPlayer.Content(livetv) + !Skin.HasSetting(OSD.OnDown.DisablePVROSDGuide)">pvrosdguide</value>
        <value condition="VideoPlayer.Content(livetv)">$VAR[Action_OSD_PVROSDGuide_OnDown]</value>
        <value condition="!Skin.HasSetting(OSD.OnDown.DisableVideoBookmarks)">videobookmarks</value>
        <value>$VAR[Action_OSD_VideoBookmarks_OnDown]</value>
    </variable>
    <variable name="Action_OSD_VideoBookmarks_OnDown">
        <value condition="!Skin.HasSetting(OSD.OnDown.Disable1141)">1141</value>
    </variable>

    <include name="Action_SearchLibrary_Filter_Onclick">
        <onclick condition="String.IsEqual(Window(1105).Property(SearchDiscover.FilterLabel),$PARAM[type]) + !String.IsEqual(Container(8000).ListItem.Property(clearfilter),True)">RunScript(script.skinvariables,add_skinstring_history=SearchDiscover.$PARAM[type]Label,value=$INFO[Container(8000).ListItem.Label],separator=' / ',toggle,use_window_prop)</onclick>
        <onclick condition="String.IsEqual(Window(1105).Property(SearchDiscover.FilterLabel),$PARAM[type]) + String.IsEqual(Container(8000).ListItem.Property(clearfilter),True)">ClearProperty(SearchDiscover.$PARAM[type]Label,1105)</onclick>
    </include>

    <include name="Action_BlurImage_SimpleBackground_Onload">
        <onload>RunScript(plugin.video.themoviedb.helper,blur_image=$VAR[Image_SimpleBackground],prefix=SimpleBackground)</onload>
    </include>

    <include name="Action_SettingsCategories_Onload">
        <include content="Object_DefaultControl" condition="!String.IsEmpty(Window(Home).Property(SettingsChanger.Switch))">
            <param name="defaultcontrol">30030</param>
            <param name="always">true</param>
        </include>
        <include content="Object_DefaultControl" condition="String.IsEmpty(Window(Home).Property(SettingsChanger.Switch))">
            <param name="defaultcontrol">$PARAM[defaultcontrol]</param>
            <param name="always">true</param>
        </include>
        <onload condition="String.IsEmpty(Window(Home).Property(SettingsChanger.Switch))">SetFocus($PARAM[defaultcontrol])</onload>
        <onload condition="!String.IsEmpty(Window(Home).Property(SettingsChanger.Switch))">SetFocus($INFO[Window(Home).Property(SettingsChanger.Switch)])</onload>
        <onload>ClearProperty(SettingsChanger.Switch,Home)</onload>
        <include>Action_BlurImage_SimpleBackground_Onload</include>
        <menucontrol>30000</menucontrol>
    </include>

    <include name="Action_Hubs_Onload">

        <onload condition="!Skin.HasSetting(Hub.$PARAM[window_id].DisableSubmenu) + String.IsEmpty(Window.Property(InhibitHubPositionReset))">SetProperty(TMDbHelper.WidgetContainer,301)</onload>
        <onload condition="!Skin.HasSetting(Hub.$PARAM[window_id].DisableSubmenu) + String.IsEmpty(Window.Property(InhibitHubPositionReset))">SetFocus(300)</onload>

        <onload condition="Skin.HasSetting(Hub.$PARAM[window_id].DisableSubmenu) + String.IsEmpty(Window.Property(InhibitHubPositionReset))">SetProperty(TMDbHelper.WidgetContainer,601)</onload>
        <onload condition="Skin.HasSetting(Hub.$PARAM[window_id].DisableSubmenu) + String.IsEmpty(Window.Property(InhibitHubPositionReset))">SetProperty(Slide.WidgetContainer,True)</onload>
        <onload condition="Skin.HasSetting(Hub.$PARAM[window_id].DisableSubmenu) + String.IsEmpty(Window.Property(InhibitHubPositionReset))">SetFocus(303,0,absolute)</onload>
        <onload condition="Skin.HasSetting(Hub.$PARAM[window_id].DisableSubmenu) + String.IsEmpty(Window.Property(InhibitHubPositionReset))">SetFocus(601)</onload>
        <onload condition="Skin.HasSetting(Hub.$PARAM[window_id].DisableSubmenu) + String.IsEmpty(Window.Property(InhibitHubPositionReset))">AlarmClock(refocus,SetFocus(601),00:00,silent)</onload>

        <onload>SetProperty(InhibitHubPositionReset,True)</onload>

        <include>Action_BuildShortcuts_OnLoad</include>

        <onunload>CancelAlarm(playtrailer,silent)</onunload>
    </include>

    <include name="Action_SkinVariables_ShortcutList_Onclick">
        <onclick condition="!String.IsEmpty(Container($PARAM[id]).ListItem.Property(target))">ActivateWindow($INFO[Container($PARAM[id]).ListItem.Property(target)],$INFO[Container($PARAM[id]).ListItem.Property(path)],return)</onclick>
        <onclick condition="String.IsEmpty(Container($PARAM[id]).ListItem.Property(target))">$INFO[Container($PARAM[id]).ListItem.Property(path)]</onclick>
    </include>

    <include name="Action_Widget_OnBack">
        <param name="enable">True</param>
        <definition>
            <onback condition="$PARAM[enable] + !Integer.IsEqual(Container($PARAM[id]).CurrentItem,1)">$PARAM[grouplistid]</onback>
            <onback condition="$PARAM[enable] + !Integer.IsEqual(Container($PARAM[id]).CurrentItem,1)">SetFocus($PARAM[id],0,absolute)</onback>
            <onback condition="$PARAM[enable] + Integer.IsEqual(Container($PARAM[id]).CurrentItem,1)">$PARAM[grouplistid]</onback>
            <onback condition="$PARAM[enable] + Integer.IsEqual(Container($PARAM[id]).CurrentItem,1)">AlarmClock(refocus1,SetFocus($PARAM[topwidgetid]),00:00,silent)</onback>
            <onback condition="$PARAM[enable] + Integer.IsEqual(Container($PARAM[id]).CurrentItem,1)">AlarmClock(refocus2,$PARAM[refocus],00:00,silent)</onback>
        </definition>
    </include>

    <include name="Action_Widget_Top">
        <param name="bump">!Skin.String(Navigation.OnUp,Search)</param>
        <param name="move">Window.IsVisible(Home) + Skin.HasSetting(Hub.Home.DisableSubmenu) + !String.IsEmpty(Container(303).ListItemNoWrap(-1).Property(guid)) + !Skin.HasSetting(Hub.Home.DisableMoveBetweenGroups)</param>
        <param name="condition">true</param>
        <definition>

            <!-- Scroll classic home -->
            <onup condition="$PARAM[condition] + $PARAM[move] + !Skin.HasSetting(Hubs.WidgetSelector)">$INFO[Container(303).ListItem(-1).Property(widgets_setfocus_bottom)]</onup>
            <onup condition="$PARAM[condition] + $PARAM[move] + Skin.HasSetting(Hubs.WidgetSelector)">$INFO[Container(303).ListItem(-1).Property(widgets_setfocus_top)]</onup>
            <onup condition="$PARAM[condition] + $PARAM[move]">SetProperty(WidgetGroup.Movement,Up)</onup>
            <onup condition="$PARAM[condition] + $PARAM[move]">Control.Move(303,-1)</onup>

            <!-- Go to search -->
            <onup condition="$PARAM[condition] + ![$PARAM[move]] + ![$PARAM[bump]]">ActivateWindow(1105)</onup>

            <!-- Bump -->
            <onup condition="$PARAM[condition] + ![$PARAM[move]] + $PARAM[bump]">SetProperty(List.ViewContainer,$NUMBER[$PARAM[id]])</onup>
            <onup condition="$PARAM[condition] + ![$PARAM[move]] + $PARAM[bump]">333</onup>

        </definition>
    </include>

    <include name="Action_Widget_End">
        <param name="bump">!Skin.String(Navigation.OnDown,Explore)</param>
        <param name="move">Window.IsVisible(Home) + Skin.HasSetting(Hub.Home.DisableSubmenu) + !String.IsEmpty(Container(303).ListItemNoWrap(1).Property(guid)) + !Skin.HasSetting(Hub.Home.DisableMoveBetweenGroups)</param>
        <definition>


            <!-- EndRow Hack: Bump focus back up to widget first -->
            <ondown condition="!String.IsEmpty(Window.Property(EndRow.HasFocus))">Action(Up)</ondown>

            <!-- Scroll Classic Home -->
            <ondown condition="$PARAM[move] + !Skin.HasSetting(Hubs.WidgetSelector)">$INFO[Container(303).ListItem(1).Property(widgets_setfocus_top)]</ondown>
            <ondown condition="$PARAM[move] + Skin.HasSetting(Hubs.WidgetSelector)">$INFO[Container(303).ListItem(1).Property(widgets_setfocus_bottom)]</ondown>
            <ondown condition="$PARAM[move]">SetProperty(WidgetGroup.Movement,Down)</ondown>
            <ondown condition="$PARAM[move]">Control.Move(303,1)</ondown>

            <!-- Explore -->
            <include content="Action_View_Explore_OnDown">
                <param name="condition">[![$PARAM[move]] + ![$PARAM[bump]]]</param>
            </include>

            <!-- Bump -->
            <ondown condition="![$PARAM[move]] + $PARAM[bump]">SetProperty(List.ViewContainer,$NUMBER[$PARAM[id]])</ondown>
            <ondown condition="![$PARAM[move]] + $PARAM[bump]">330</ondown>
        </definition>
    </include>

    <!-- TODO_SKINVARIABLES :: Positioned based upon widget stack positions -->
    <variable name="Action_Menu_Position">
        <value>SetFocus(303)</value>
        <value>SetFocus(303,1,absolute)</value>
    </variable>

    <include name="Action_UpdateSearchTerm">
        <onclick>AlarmClock(SetSearchTerm,SetProperty(SearchTerm,$INFO[Control.GetLabel(9099).index(1)]),00:01,silent)</onclick>
        <onfocus>AlarmClock(SetSearchTerm,SetProperty(SearchTerm,$INFO[Control.GetLabel(9099).index(1)]),00:01,silent)</onfocus>
        <onunfocus>AlarmClock(SetSearchTerm,SetProperty(SearchTerm,$INFO[Control.GetLabel(9099).index(1)]),00:01,silent)</onunfocus>
    </include>

    <include name="Action_Recommendations_OnClick">
        <oninfo>Action(Select)</oninfo>
        <onclick>RunScript(plugin.video.themoviedb.helper,add_path=$INFO[Container($PARAM[id]).ListItem.FolderPath],call_auto=1190,return)</onclick>
        <onclick>Dialog.Close(1120,true)</onclick>
        <onclick>Dialog.Close(1121,true)</onclick>
        <onclick>Dialog.Close(1122,true)</onclick>
    </include>

    <include name="Action_HomeMenu_OnRightLeft">
        <param name="onlist">320</param>
        <param name="c_bump">[!String.IsEmpty(Window.Property(List.ViewContainer.Bump))]</param>
        <param name="c_wosf">[Window.IsVisible(Home) + Skin.HasSetting(Hub.Home.DisableSubmenu) + !String.IsEmpty(Container(303).ListItem.Property(widgets_setfocus))]</param>
        <param name="i_wosf">$INFO[Container(303).ListItem.Property(widgets_setfocus)]</param>
        <param name="c_left">[!String.IsEmpty(Window.Property(List.ViewContainer.Left))]</param>
        <param name="i_left">$INFO[Window.Property(List.ViewContainer.Left)]</param>
        <param name="c_view">[!String.IsEmpty(Window.Property(List.ViewContainer))]</param>
        <param name="i_view">$INFO[Window.Property(List.ViewContainer)]</param>
        <param name="c_tmdb">[!String.IsEmpty(Window.Property(TMDbHelper.WidgetContainer))]</param>
        <param name="i_tmdb">$INFO[Window.Property(TMDbHelper.WidgetContainer)]</param>
        <definition>

            <onleft condition="$PARAM[c_bump]">331</onleft>
            <onleft condition="!$PARAM[c_bump] + $PARAM[c_left]">SetFocus($PARAM[i_left],99999,absolute)</onleft>
            <onleft condition="!$PARAM[c_bump] + !$PARAM[c_left] + $PARAM[c_view]">SetFocus($PARAM[i_view],99999,absolute)</onleft>
            <onleft condition="!$PARAM[c_bump] + !$PARAM[c_view] + $PARAM[c_tmdb]">SetFocus($PARAM[i_tmdb],99999,absolute)</onleft>
            <onleft condition="!$PARAM[c_bump] + $PARAM[c_wosf]">$PARAM[i_wosf]</onleft>
            <onleft condition="!$PARAM[c_bump] + !$PARAM[c_view] + !$PARAM[c_tmdb] + !$PARAM[c_wosf]">$PARAM[onlist]</onleft>

            <onright condition="$PARAM[c_view]">SetFocus($PARAM[i_view],0,absolute)</onright>
            <onright condition="!$PARAM[c_view] + $PARAM[c_tmdb]">SetFocus($PARAM[i_tmdb],0,absolute)</onright>
            <onright condition="!$PARAM[c_view] + $PARAM[c_wosf]">$PARAM[i_wosf]</onright>
            <onright condition="!$PARAM[c_view] + !$PARAM[c_tmdb] + !$PARAM[c_wosf]">$PARAM[onlist]</onright>

            <onback condition="!Window.IsVisible(Home)">ClearProperty(List.ViewContainer)</onback>
            <onback condition="!Window.IsVisible(Home)">ClearProperty(List.ViewContainer.Left)</onback>
            <onback condition="!Window.IsVisible(Home)">ClearProperty(TMDbHelper.WidgetContainer)</onback>
            <onback condition="$EXP[Exp_FilterWall_IsActive]">68</onback>

        </definition>
    </include>

    <include name="Action_BuildShortcuts_OnLoad">
        <onload>runscript(script.skinvariables,"run_executebuiltin=special://skin/shortcuts/skinvariables-build-templates.json",use_rules)</onload>
    </include>
    <include name="Action_BuildShortcuts_OnUnload">
        <param name="condition">true</param>
        <definition>
            <onunload condition="$PARAM[condition]">runscript(script.skinvariables,"run_executebuiltin=special://skin/shortcuts/skinvariables-build-templates.json",use_rules)</onunload>
        </definition>
    </include>

    <include name="Action_View_Transition">
        <onload>SetProperty(ViewTransition,Hidden,$PARAM[window])</onload>
        <onunload>SetProperty(ViewTransition,Visible,$PARAM[window])</onunload>
    </include>

    <include name="Acting_SetImage_Reverse_OnRight">
        <onright condition="$PARAM[condition]">SetProperty(TMDbHelper.ListItem.BlurImage.Original,$INFO[Window(Home).Property(BlurImage.Original)],Home)</onright>
        <onright condition="$PARAM[condition]">SetProperty(TMDbHelper.ListItem.BlurImage,$INFO[Window(Home).Property(BlurImage)],Home)</onright>
        <onright condition="$PARAM[condition]">SetProperty(TMDbHelper.ListItem.CropImage,$INFO[Window(Home).Property(CropImage)],Home)</onright>
    </include>

    <include name="Acting_SetImage_OnRight">
        <onright condition="$PARAM[condition]">SetProperty(BlurImage.Original,$INFO[Window(Home).Property(TMDbHelper.ListItem.BlurImage.Original)],Home)</onright>
        <onright condition="$PARAM[condition]">SetProperty(BlurImage,$INFO[Window(Home).Property(TMDbHelper.ListItem.BlurImage)],Home)</onright>
        <onright condition="$PARAM[condition]">SetProperty(CropImage,$INFO[Window(Home).Property(TMDbHelper.ListItem.CropImage)],Home)</onright>
    </include>

    <include name="Action_VideoInfo_Main_OnRight">
        <onright condition="$PARAM[condition]">SetProperty(Director_Label,$VAR[Label_FromDirector],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Director_Image,$VAR[Image_DirectorIcon],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Director_Query,$VAR[Path_FromDirector],1120)</onright>

        <onright condition="$PARAM[condition]">SetProperty(Writer_Label,$VAR[Label_FromWriter],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Writer_Image,$VAR[Image_WriterIcon],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Writer_Query,$VAR[Path_FromWriter],1120)</onright>

        <onright condition="$PARAM[condition]">SetProperty(Creator_Label,$VAR[Label_FromCreator],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Creator_Image,$VAR[Image_CreatorIcon],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Creator_Query,$VAR[Path_FromCreator],1120)</onright>

        <onright condition="$PARAM[condition]">SetProperty(Studio_Label,$VAR[Label_FromStudio],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Studio_Image,$VAR[Image_StudioIcon],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Studio_Query,$VAR[Path_FromStudio],1120)</onright>

        <onright condition="$PARAM[condition]">SetProperty(Set_Label,$INFO[Container(99950).ListItem.Property(Set.Name)],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Set_Image,$INFO[Container(99950).ListItem.Property(Set.Fanart)],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Set_Query,$INFO[Container(99950).ListItem.Property(Set.TMDb_ID),&amp;tmdb_id=,],1120)</onright>

        <onright condition="$PARAM[condition]">SetProperty(Version_Label,$INFO[ListItem.VideoVersionName],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Version_Image,$INFO[ListItem.Art(poster)],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Version_Query,$INFO[ListItem.DBID,videodb://movies/videoversions/0?mediaid=,],1120)</onright>

        <onright condition="$PARAM[condition]">SetProperty(Item_Title,$VAR[Label_Title],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Item_Query,$VAR[Path_Param_Query],1120)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Item_Type,$VAR[Path_Param_Type],1120)</onright>
        
        <include content="Acting_SetImage_OnRight">
            <param name="condition">$PARAM[condition]</param>
        </include>

        <onright condition="$PARAM[condition]">SetProperty(Episodes_Label,$LOCALIZE[20366],1120)</onright>

        <onright condition="$PARAM[condition]">SetFocus(7001)</onright>
        <onright condition="$PARAM[condition]">ActivateWindow(1120)</onright>
        <onright condition="$PARAM[condition]">SetFocus(4000)</onright>
    </include>

    <include name="Action_VideoInfo_Cast_OnRight">
        <onright condition="$PARAM[condition]">SetProperty(Item_Title,$VAR[Label_Title],1122)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Item_Query,$VAR[Path_Param_Query],1122)</onright>
        <onright condition="$PARAM[condition]">SetProperty(Item_Type,$VAR[Path_Param_Type],1122)</onright>

        <include content="Acting_SetImage_OnRight">
            <param name="condition">$PARAM[condition]</param>
        </include>

        <onright condition="$PARAM[condition]">SetProperty(Episodes_Label,$INFO[ListItem.Property(watchedepisodes)]$INFO[ListItem.Property(totalepisodes), of ,] $LOCALIZE[16102],1122)</onright>

        <onright condition="$PARAM[condition]">SetFocus(7001)</onright>
        <onright condition="$PARAM[condition]">ActivateWindow(1122)</onright>
        <onright condition="$PARAM[condition]">SetFocus(4000)</onright>
    </include>

    <include name="Action_Info_Recommendations_OnClick">
        <onclick>SetProperty(Item_Title,$VAR[Label_Title],1121)</onclick>
        <onclick>SetProperty(Item_Query,$VAR[Path_Param_Query],1121)</onclick>
        <onclick>SetProperty(Item_Type,$VAR[Path_Param_Type],1121)</onclick>
        <onclick>SetProperty(Item_Year,$INFO[ListItem.Year],1121)</onclick>

        <onclick>SetProperty(Genre_Title,$INFO[Container(99950).ListItem.Property(Genre.1.Name)]$INFO[Container(99950).ListItem.Property(Genre.2.Name), / ,]$INFO[Container(99950).ListItem.Property(Genre.3.Name), / ,],1121)</onclick>
        <onclick>SetProperty(Genre_Query,$INFO[Container(99950).ListItem.Property(Genre.1.TMDB_ID),&amp;with_separator=AND&amp;with_id=True&amp;with_genres=,]$INFO[Container(99950).ListItem.Property(Genre.2.TMDB_ID), / ,]$INFO[Container(99950).ListItem.Property(Genre.3.TMDB_ID), / ,],1121)</onclick>
        <onclick>SetFocus(7001)</onclick>
        <onclick>ActivateWindow(1121)</onclick>
        <onclick>SetFocus(4000)</onclick>
    </include>

    <include name="Action_View_Explore_OnDown">
        <param name="condition">True</param>
        <definition>
            <ondown condition="$PARAM[condition] + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">SetProperty(Item_Title,$VAR[Label_Title_Container],1181)</ondown>
            <ondown condition="$PARAM[condition] + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">SetProperty(Item_Query,$VAR[Path_Param_Query],1181)</ondown>
            <ondown condition="$PARAM[condition] + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">SetProperty(Item_Type,$VAR[Path_Param_Type],1181)</ondown>
            <ondown condition="$PARAM[condition] + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">SetProperty(Item_Year,$INFO[ListItem.Year],1181)</ondown>
            <ondown condition="$PARAM[condition] + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">SetProperty(Genre_Title,$INFO[Container(99950).ListItem.Property(Genre.1.Name)]$INFO[Container(99950).ListItem.Property(Genre.2.Name), / ,]$INFO[Container(99950).ListItem.Property(Genre.3.Name), / ,],1181)</ondown>
            <ondown condition="$PARAM[condition] + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">SetProperty(Genre_Query,$INFO[Container(99950).ListItem.Property(Genre.1.TMDB_ID),&amp;with_separator=AND&amp;with_id=True&amp;with_genres=,]$INFO[Container(99950).ListItem.Property(Genre.2.TMDB_ID), / ,]$INFO[Container(99950).ListItem.Property(Genre.3.TMDB_ID), / ,],1181)</ondown>

            <ondown condition="$PARAM[condition] + ![String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">ClearProperty(Item_Title,1181)</ondown>
            <ondown condition="$PARAM[condition] + ![String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">ClearProperty(Item_Query,1181)</ondown>
            <ondown condition="$PARAM[condition] + ![String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">ClearProperty(Item_Type,1181)</ondown>
            <ondown condition="$PARAM[condition] + ![String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">ClearProperty(Item_Year,1181)</ondown>
            <ondown condition="$PARAM[condition] + ![String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">ClearProperty(Genre_Title,1181)</ondown>
            <ondown condition="$PARAM[condition] + ![String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]">ClearProperty(Genre_Query,1181)</ondown>

            <ondown condition="$PARAM[condition]">ActivateWindow(1181)</ondown>
        </definition>
    </include>

    <variable name="Action_Var_ToMediaFilter">
        <value condition="Window.IsVisible(MyPlaylist.xml) | !$EXP[Exp_FilterWall_IsViewtype] | !Skin.HasSetting(Navigation.MediaFilterWall)">Runscript(script.skinvariables,"run_executebuiltin=special://skin/shortcuts/builtins/skinvariables-mediafilter-setfocus.json",use_rules,id=$VAR[Action_View_ContentID],focus_id=19,clear_prop_one=Null,clear_prop_two=Null)</value>
        <value>Runscript(script.skinvariables,$VAR[MediaWall_ScriptTypeDef],use_rules,id=$VAR[Action_View_ContentID],use_mediafilter=True,win_prop=WallSlideIn,focus_id=19,clear_prop_one=Null,clear_prop_two=Null)</value>
    </variable>

    <variable name="Action_Var_ToMediaScrollbar">
        <value>SetFocus(60)</value>
    </variable>

    <include name="Action_View_Movement_OnUp">
        <onup condition="Skin.String(Navigation.OnUp,Search)">ActivateWindow(1105)</onup>
        <onup condition="!Skin.String(Navigation.OnUp,Search)">SetProperty(List.ViewContainer,50)</onup>
        <onup condition="!Skin.String(Navigation.OnUp,Search)">333</onup>
    </include>

    <include name="Action_View_Movement_OnDown">
        <param name="to_scrollbar">true</param>
        <definition>
            <ondown>$VAR[Action_Var_ToMediaFilter]</ondown>
        </definition>
    </include>

    <include name="Action_View_Movement_OnBack">
        <param name="onleft" />
        <param name="onback">False</param>
        <param name="onmenu">[Skin.String(Navigation.OnBack,Menu) | Window.IsVisible(Home)]</param>
        <param name="backid">62</param>
        <param name="menuid">303</param>
        <param name="onbump">Skin.String(Navigation.OnLeftRight,Bump)</param>
        <param name="enable">True</param>
        <param name="always">False</param>
        <definition>
            <onback condition="$PARAM[enable] + $PARAM[onback] + !Container($PARAM[id]).ListItem.IsParentFolder">$PARAM[backid]</onback>
            <onback condition="$PARAM[enable] + $PARAM[onback] + !Container($PARAM[id]).ListItem.IsParentFolder">SetFocus($PARAM[id],0,absolute)</onback>

            <onback condition="$PARAM[enable] + $PARAM[onmenu] + ![$PARAM[onback] + !Container($PARAM[id]).ListItem.IsParentFolder] + $PARAM[onbump]">SetProperty(List.ViewContainer.Bump,True)</onback>
            <onback condition="$PARAM[enable] + $PARAM[onmenu] + ![$PARAM[onback] + !Container($PARAM[id]).ListItem.IsParentFolder] + ![$PARAM[onbump]]">ClearProperty(List.ViewContainer.Bump)</onback>
            <onback condition="$PARAM[enable] + $PARAM[onmenu] + ![$PARAM[onback] + !Container($PARAM[id]).ListItem.IsParentFolder]">$PARAM[menuid]</onback>
            <onback condition="$PARAM[enable] + $PARAM[onmenu] + ![$PARAM[onback] + !Container($PARAM[id]).ListItem.IsParentFolder]">SetProperty(List.ViewContainer.Left,$PARAM[onleft])</onback>
            <onback condition="$PARAM[enable] + $PARAM[onmenu] + ![$PARAM[onback] + !Container($PARAM[id]).ListItem.IsParentFolder]">SetProperty(List.ViewContainer,$PARAM[id])</onback>
            <onback condition="$PARAM[enable] + $PARAM[onmenu] + ![$PARAM[onback] + !Container($PARAM[id]).ListItem.IsParentFolder]">SetFocus($PARAM[menuid]$PARAM[online])</onback>

            <onback condition="$PARAM[always] + ![$PARAM[enable]]">SetFocus($PARAM[id],0,absolute)</onback>
            <onback condition="$PARAM[always] + ![$PARAM[enable]]">SetFocus(50)</onback>
        </definition>
    </include>

    <include name="Action_View_Movement_OnLeft">
        <param name="onleft" />
        <param name="onbump">Skin.String(Navigation.OnLeftRight,Bump)</param>
        <param name="onwrap">Skin.String(Navigation.OnLeftRight,Wrap)</param>
        <param name="menuid">303</param>
        <definition>
            <onleft condition="![$PARAM[onwrap]] + $PARAM[onbump]">SetProperty(List.ViewContainer.Bump,True)</onleft>
            <onleft condition="![$PARAM[onwrap]] + ![$PARAM[onbump]]">ClearProperty(List.ViewContainer.Bump)</onleft>
            <onleft condition="![$PARAM[onwrap]]">$PARAM[menuid]</onleft>
            <onleft condition="![$PARAM[onwrap]]">SetProperty(List.ViewContainer.Left,$PARAM[onleft])</onleft>
            <onleft condition="![$PARAM[onwrap]]">SetProperty(List.ViewContainer,$PARAM[id])</onleft>
            <onleft condition="![$PARAM[onwrap]]">SetFocus($PARAM[menuid]$PARAM[online])</onleft>

            <onleft condition="$PARAM[onwrap]">$PARAM[onleft]</onleft>
            <onleft condition="$PARAM[onwrap]">$PARAM[id]</onleft>
        </definition>
    </include>

    <include name="Action_View_Movement_OnRight">
        <param name="onleft" />
        <param name="online" />
        <param name="onbump">Skin.String(Navigation.OnLeftRight,Bump)</param>
        <param name="onwrap">Skin.String(Navigation.OnLeftRight,Wrap)</param>
        <param name="menuid">303</param>
        <definition>

            <!-- Menu -->
            <onright condition="![$PARAM[onbump]] + ![$PARAM[onwrap]]">$PARAM[menuid]</onright>
            <onright condition="![$PARAM[onbump]] + ![$PARAM[onwrap]]">SetProperty(List.ViewContainer,$PARAM[id])</onright>
            <onright condition="![$PARAM[onbump]] + ![$PARAM[onwrap]]">SetProperty(List.ViewContainer.Left,$PARAM[onleft])</onright>
            <onright condition="![$PARAM[onbump]] + ![$PARAM[onwrap]]">SetFocus($PARAM[id],0,absolute)</onright>
            <onright condition="![$PARAM[onbump]] + ![$PARAM[onwrap]]">SetFocus($PARAM[menuid]$PARAM[online])</onright>

            <!-- Bump -->
            <onright condition="$PARAM[onbump]">SetProperty(List.ViewContainer,$PARAM[id])</onright>
            <onright condition="$PARAM[onbump]">332</onright>

            <onright condition="$PARAM[onwrap]">$PARAM[id]</onright>

        </definition>
    </include>

    <include name="Action_View_Movement_OnLeftRight">
        <param name="include_onback">True</param>
        <definition>
            <include content="Action_View_Movement_OnLeft">
                <param name="id">$PARAM[id]</param>
                <param name="menuid">$PARAM[menuid]</param>
                <param name="onbump">$PARAM[onbump]</param>
                <param name="onleft">$PARAM[onleft]</param>
                <param name="online">$PARAM[online]</param>
            </include>
            <include content="Action_View_Movement_OnRight">
                <param name="id">$PARAM[id]</param>
                <param name="menuid">$PARAM[menuid]</param>
                <param name="onbump">$PARAM[onbump]</param>
                <param name="onleft">$PARAM[onleft]</param>
                <param name="online">$PARAM[online]</param>
            </include>
            <include content="Action_View_Movement_OnBack" condition="$PARAM[include_onback]">
                <param name="id">$PARAM[id]</param>
                <param name="onbump">$PARAM[onbump]</param>
                <param name="onleft">$PARAM[onleft]</param>
                <param name="onback">$PARAM[onback]</param>
                <param name="onmenu">$PARAM[onmenu]</param>
                <param name="backid">$PARAM[backid]</param>
                <param name="menuid">$PARAM[menuid]</param>
                <param name="online">$PARAM[online]</param>
                <param name="always">$PARAM[always]</param>
            </include>
        </definition>
    </include>

    <include name="Action_OSD_Button_OnFocus">
        <onfocus condition="!String.IsEmpty(Skin.String(OSD_Timeout))">AlarmClock(osd_timeout,SetFocus(99997),$INFO[Skin.String(OSD_Timeout),00:,],silent)</onfocus>
        <onunfocus>CancelAlarm(osd_timeout,true)</onunfocus>
    </include>

    <include name="Action_OptionsMenu_Default">
        <param name="id">50</param>
        <definition>
            <onleft>$PARAM[id]</onleft>
            <onright>$PARAM[id]</onright>
            <onback>$PARAM[id]</onback>
        </definition>
    </include>

    <include name="Action_OptionsMenu_PVRGuide">
        <onleft>10</onleft>
        <onright>10</onright>
    </include>

    <include name="Action_OptionsMenu_ButtonMenu">
        <onleft>Close</onleft>
        <onright>Close</onright>
    </include>

    <include name="_Action_Blur_Onload">
        <param name="sourceimage">Art(fanart)</param>
        <definition>
            <onload>SetProperty(TMDbHelper.Blur.SourceImage,$PARAM[sourceimage],Home)</onload>
            <onload>SetProperty(TMDbHelper.Blur.Fallback,$VAR[Image_SimpleBackground],Home)</onload>
        </definition>
    </include>
    <include name="Action_Blur_Onload">
        <include content="_Action_Blur_Onload">
            <param name="sourceimage">Art(fanart)|Property(fanart)|Art(profile)||EPGEventIcon</param>
        </include>
    </include>

    <include name="_Action_Blur_OnUnload">
        <param name="sourceimage">Art(fanart)</param>
        <definition>
            <onunload>SetProperty(TMDbHelper.Blur.SourceImage,$PARAM[sourceimage],Home)</onunload>
            <onunload>SetProperty(TMDbHelper.Blur.Fallback,$VAR[Image_SimpleBackground],Home)</onunload>
        </definition>
    </include>
    <include name="Action_Blur_OnUnload">
        <include content="_Action_Blur_OnUnload">
            <param name="sourceimage">Art(fanart)|Property(fanart)|Art(profile)</param>
        </include>
    </include>

    <variable name="Action_Var_BuildTextures">
        <value>script.texturemaker,bg=$VAR[ColorHighlight],fg=$VAR[ColorGradient],alpha=1.0,folder=ArcticFuse,selectbox_thin=special://skin/extras/textures/selectbox_thin.png,scrollv=special://skin/extras/textures/scrollv.png,scrollh=special://skin/extras/textures/scrollh.png,underline=special://skin/extras/textures/underline.png,box=special://skin/extras/textures/box.png,circle=special://skin/extras/textures/circle.png,menu=special://skin/extras/textures/menu.png,menumain+overlay+slicing{240|80}=special://skin/extras/textures/menumain.png,buttonmain+slicing{240|80}=special://skin/extras/textures/menumain.png,main=special://skin/extras/textures/main.png,circlebuttondialog=special://skin/extras/textures/circlebutton.png</value>
    </variable>

    <include name="Action_BuildTextures_Onclick">
        <onclick condition="!String.IsEqual(Window(Home).Property(ColorPicker_Type),Indicator)">runscript($VAR[Action_Var_BuildTextures],reload=1111)</onclick>
    </include>

    <include name="Action_BuildTextures_Onclick_Preset">
        <param name="window_id">1118</param>
        <definition>
            <onclick>runscript($VAR[Action_Var_BuildTextures],reload=$PARAM[window_id])</onclick>
        </definition>
    </include>

    <include name="Action_PlayTrailer_OnClick">
        <onclick condition="!Skin.HasSetting(Trailers.PlayFullscreen) + String.IsEmpty($PARAM[trailer]) + !String.IsEmpty($PARAM[trailer_fallback])">SetProperty(Trailer,$ESCINFO[$PARAM[trailer_fallback]],1123)</onclick>
        <onclick condition="!Skin.HasSetting(Trailers.PlayFullscreen) + !String.IsEmpty($PARAM[trailer])">SetProperty(Trailer,$ESCINFO[$PARAM[trailer]],1123)</onclick>

        <onclick condition="!Skin.HasSetting(Trailers.PlayFullscreen) + !Skin.HasSetting(Trailers.PlayInDialog) + String.IsEmpty($PARAM[trailer]) + !String.IsEmpty($PARAM[trailer_fallback])">PlayMedia($ESCINFO[$PARAM[trailer_fallback]],False,1)</onclick>
        <onclick condition="!Skin.HasSetting(Trailers.PlayFullscreen) + !Skin.HasSetting(Trailers.PlayInDialog) + !String.IsEmpty($PARAM[trailer])">PlayMedia($ESCINFO[$PARAM[trailer]],False,1)</onclick>

        <onclick condition="!Skin.HasSetting(Trailers.PlayFullscreen) + Skin.HasSetting(Trailers.PlayInDialog) + [!String.IsEmpty($PARAM[trailer]) | !String.IsEmpty($PARAM[trailer_fallback])]">ActivateWindow(1123)</onclick>

        <onclick condition="Skin.HasSetting(Trailers.PlayFullscreen) + [!String.IsEmpty($PARAM[trailer]) | !String.IsEmpty($PARAM[trailer_fallback])]">Dialog.Close(all,force)</onclick>
        <onclick condition="Skin.HasSetting(Trailers.PlayFullscreen) + String.IsEmpty($PARAM[trailer]) + !String.IsEmpty($PARAM[trailer_fallback])">PlayMedia($ESCINFO[$PARAM[trailer_fallback]])</onclick>
        <onclick condition="Skin.HasSetting(Trailers.PlayFullscreen) + !String.IsEmpty($PARAM[trailer])">PlayMedia($ESCINFO[$PARAM[trailer]])</onclick>
    </include>

    <include name="Action_AutoTrailer_OnFocus">
        <onfocus condition="!String.IsEmpty(Container($PARAM[id]).ListItem.Trailer)">AlarmClock(autotrailer,SetProperty(AutoTrailer,$ESCINFO[Container($PARAM[id]).ListItem.Trailer]),00:05,silent)</onfocus>
        <onfocus condition="!String.IsEmpty(Container($PARAM[id]).ListItem.Trailer)">AlarmClock(playtrailer,PlayMedia($ESCINFO[Container($PARAM[id]).ListItem.Trailer],1),00:05,silent)</onfocus>
        <onfocus condition="String.IsEmpty(Container($PARAM[id]).ListItem.Trailer)">CancelAlarm(playtrailer,silent)</onfocus>
        <onfocus condition="String.IsEmpty(Container($PARAM[id]).ListItem.Trailer)">CancelAlarm(autotrailer,silent)</onfocus>
        <onunfocus>CancelAlarm(playtrailer,silent)</onunfocus>
        <onunfocus>CancelAlarm(autotrailer,silent)</onunfocus>
        <onunfocus condition="Player.HasVideo + String.IsEqual(Window.Property(AutoTrailer),Player.FileNameAndPath)">Action(Stop)</onunfocus>
    </include>

    <include name="Action_AutoTrailer_OnClick">
        <onclick condition="Player.HasVideo + String.IsEqual(Window.Property(AutoTrailer),Player.FileNameAndPath)">Action(Stop)</onclick>
        <onclick condition="!String.IsEmpty(Container($PARAM[id]).ListItem.Trailer)">AlarmClock(autotrailer,SetProperty(AutoTrailer,$ESCINFO[Container($PARAM[id]).ListItem.Trailer]),00:05,silent)</onclick>
        <onclick condition="!String.IsEmpty(Container($PARAM[id]).ListItem.Trailer)">AlarmClock(playtrailer,PlayMedia($ESCINFO[Container($PARAM[id]).ListItem.Trailer],1),00:05,silent)</onclick>
        <onclick condition="String.IsEmpty(Container($PARAM[id]).ListItem.Trailer)">CancelAlarm(playtrailer,silent)</onclick>
        <onclick condition="String.IsEmpty(Container($PARAM[id]).ListItem.Trailer)">CancelAlarm(autotrailer,silent)</onclick>
    </include>


    <include name="Action_Scheme_Onclick_Miami">
        <onclick>Skin.Reset(focuscolor.name)</onclick>
        <onclick>Skin.Reset(gradientcolor.name)</onclick>
        <onclick>Skin.Reset(EnableMonochromeHighlight)</onclick>
        <onclick>Skin.Reset(InvertSelectedText)</onclick>
        <onclick>Skin.Reset(Background.DialogImage)</onclick>
        <onclick>Skin.SetString(Background.Image,special://skin/extras/backgrounds/blur/purple_blur.jpg)</onclick>
        <include content="Action_BuildTextures_Onclick_Preset">
            <param name="window_id">$PARAM[window_id]</param>
        </include>
        <onclick>RunScript(plugin.video.themoviedb.helper,blur_image=$VAR[Image_SimpleBackground])</onclick>
    </include>

    <include name="Action_Scheme_Onclick_Aqua">
        <onclick>Skin.SetString(focuscolor.name,ff0091ea)</onclick>
        <onclick>Skin.SetString(gradientcolor.name,ff00bfa5)</onclick>
        <onclick>Skin.Reset(EnableMonochromeHighlight)</onclick>
        <onclick>Skin.Reset(InvertSelectedText)</onclick>
        <onclick>Skin.SetString(Background.DialogImage,Green)</onclick>
        <onclick>Skin.SetString(Background.Image,special://skin/extras/backgrounds/blur/green_blur.jpg)</onclick>
        <include content="Action_BuildTextures_Onclick_Preset">
            <param name="window_id">$PARAM[window_id]</param>
        </include>
        <onclick>RunScript(plugin.video.themoviedb.helper,blur_image=$VAR[Image_SimpleBackground])</onclick>
    </include>

    <include name="Action_Scheme_Onclick_Sunset">
        <onclick>Skin.SetString(focuscolor.name,fff4511e)</onclick>
        <onclick>Skin.SetString(gradientcolor.name,ffe91e63)</onclick>
        <onclick>Skin.Reset(EnableMonochromeHighlight)</onclick>
        <onclick>Skin.Reset(InvertSelectedText)</onclick>
        <onclick>Skin.SetString(Background.DialogImage,Blush)</onclick>
        <onclick>Skin.SetString(Background.Image,special://skin/extras/backgrounds/blur/pink_blur.jpg)</onclick>
        <include content="Action_BuildTextures_Onclick_Preset">
            <param name="window_id">$PARAM[window_id]</param>
        </include>
        <onclick>RunScript(plugin.video.themoviedb.helper,blur_image=$VAR[Image_SimpleBackground])</onclick>
    </include>

    <include name="Action_Scheme_Onclick_Slate">
        <onclick>Skin.SetString(focuscolor.name,ff0091ea)</onclick>
        <onclick>Skin.SetString(gradientcolor.name,ff0091ea)</onclick>
        <onclick>Skin.SetBool(EnableMonochromeHighlight)</onclick>
        <onclick>Skin.Reset(InvertSelectedText)</onclick>
        <onclick>Skin.SetString(Background.DialogImage,Slate)</onclick>
        <onclick>Skin.SetString(Background.Image,special://skin/extras/backgrounds/blur/slate_blur.jpg)</onclick>
        <include content="Action_BuildTextures_Onclick_Preset">
            <param name="window_id">$PARAM[window_id]</param>
        </include>
        <onclick>RunScript(plugin.video.themoviedb.helper,blur_image=$VAR[Image_SimpleBackground])</onclick>
    </include>

    <include name="Action_Scheme_Onclick_Midnight">
        <onclick>Skin.SetString(focuscolor.name,ff5528a8)</onclick>
        <onclick>Skin.SetString(gradientcolor.name,ff5528a8)</onclick>
        <onclick>Skin.SetBool(EnableMonochromeHighlight)</onclick>
        <onclick>Skin.Reset(InvertSelectedText)</onclick>
        <onclick>Skin.SetString(Background.DialogImage,Coal)</onclick>
        <onclick>Skin.SetString(Background.Image,special://skin/extras/backgrounds/blur/coal_blur.jpg)</onclick>
        <include content="Action_BuildTextures_Onclick_Preset">
            <param name="window_id">$PARAM[window_id]</param>
        </include>
        <onclick>RunScript(plugin.video.themoviedb.helper,blur_image=$VAR[Image_SimpleBackground])</onclick>
    </include>
</includes>