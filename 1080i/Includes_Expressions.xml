<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <!-- ============== -->
    <!-- Skin Shortcuts -->
    <!-- ============== -->
    <expression name="Exp_SkinShortcuts_IsHubMenu">[String.IsEqual(Window.Property(groupname),moviemenu) | String.IsEqual(Window.Property(groupname),tvshowmenu) | String.IsEqual(Window.Property(groupname),musicmenu) | String.IsEqual(Window.Property(groupname),pvrmenu) | String.IsEqual(Window.Property(groupname),custom01menu) | String.IsEqual(Window.Property(groupname),custom02menu) | String.IsEqual(Window.Property(groupname),custom03menu) | String.IsEqual(Window.Property(groupname),custom04menu)]</expression>
    <expression name="Exp_SkinShortcuts_IsHubWidgets">[String.IsEqual(Window.Property(groupname),moviewidgets) | String.IsEqual(Window.Property(groupname),tvshowwidgets) | String.IsEqual(Window.Property(groupname),musicwidgets) | String.IsEqual(Window.Property(groupname),pvrwidgets) | String.IsEqual(Window.Property(groupname),custom01widgets) | String.IsEqual(Window.Property(groupname),custom02widgets) | String.IsEqual(Window.Property(groupname),custom03widgets) | String.IsEqual(Window.Property(groupname),custom04widgets)]</expression>
    <expression name="Exp_SkinShortcuts_IsSearchWidgets">[String.IsEqual(Window.Property(groupname),searchmenu)]</expression>
    <expression name="Exp_SkinShortcuts_IsHomeWidgets">[String.EndsWith(Window.Property(groupname),.1) | String.EndsWith(Window.Property(groupname),.2)]</expression>
    <expression name="Exp_SkinShortcuts_IsExploreMenu">[String.IsEqual(Window.Property(groupname),exploremenu)]</expression>
    <expression name="Exp_SkinShortcuts_IsPowerMenu">[String.IsEqual(Window.Property(groupname),powermenu)]</expression>
    <expression name="Exp_SkinShortcuts_IsHomeMenu">[String.IsEqual(Window.Property(groupname),mainmenu)]</expression>
    <expression name="Exp_SkinShortcuts_IsSubmenu">[!String.IsEmpty(Window.Property(groupdisplayname)) + !$EXP[Exp_SkinShortcuts_IsHomeWidgets]]</expression>
    <expression name="Exp_SkinShortcuts_IsAdaptiveWidget">[[!String.IsEmpty(Container(211).ListItem.Property(useWidgetList)) + $EXP[Exp_SkinShortcuts_IsSubmenu]] | [String.IsEmpty(Container(211).ListItem.Property(useWidgetList)) + !$EXP[Exp_SkinShortcuts_IsSubmenu] + $EXP[Exp_SkinShortcuts_IsHubMenu]]]</expression>

    <!-- ============== -->
    <!-- Colour Schemes -->
    <!-- ============== -->
    <expression name="Exp_ColourTheme_IsLight">[String.IsEqual(Skin.CurrentColourTheme,Light ~UNDER CONSTRUCTION~)]</expression>
    <expression name="Exp_ColourTheme_IsGrey">[String.IsEqual(Skin.CurrentColourTheme,Dark Grey)]</expression>
    <expression name="Exp_ColourTheme_IsBlack">[String.IsEqual(Skin.CurrentColourTheme,SKINDEFAULT)]</expression>

    <expression name="Exp_ColourHighlight_IsAqua">[String.IsEqual(Skin.String(focuscolor.name),ff0091ea) + String.IsEqual(Skin.String(gradientcolor.name),ff00bfa5) + !Skin.HasSetting(EnableMonochromeHighlight) + !Skin.HasSetting(InvertSelectedText)]</expression>
    <expression name="Exp_ColourHighlight_IsTropical">[String.IsEqual(Skin.String(focuscolor.name),fff4511e) + String.IsEqual(Skin.String(gradientcolor.name),ffe91e63) + !Skin.HasSetting(EnableMonochromeHighlight) + !Skin.HasSetting(InvertSelectedText)]</expression>
    <expression name="Exp_ColourHighlight_IsMiami">[String.IsEmpty(Skin.String(focuscolor.name)) + String.IsEmpty(Skin.String(gradientcolor.name)) + !Skin.HasSetting(EnableMonochromeHighlight) + !Skin.HasSetting(InvertSelectedText)]</expression>
    <expression name="Exp_ColourHighlight_IsWhite">[String.IsEqual(Skin.String(focuscolor.name),ffffffff) + String.IsEqual(Skin.String(gradientcolor.name),ffffffff) + Skin.HasSetting(EnableMonochromeHighlight) + Skin.HasSetting(InvertSelectedText)]</expression>
    <expression name="Exp_ColourHighlight_IsBlue">[String.IsEqual(Skin.String(focuscolor.name),ff0091ea) + String.IsEqual(Skin.String(gradientcolor.name),ff0091ea) + Skin.HasSetting(EnableMonochromeHighlight) + !Skin.HasSetting(InvertSelectedText)]</expression>
    <expression name="Exp_ColourHighlight_IsCoral">[String.IsEqual(Skin.String(focuscolor.name),ffe53564) + String.IsEqual(Skin.String(gradientcolor.name),ffe53564) + Skin.HasSetting(EnableMonochromeHighlight) + !Skin.HasSetting(InvertSelectedText)]</expression>
    <expression name="Exp_ColourHighlight_IsOrange">[String.IsEqual(Skin.String(focuscolor.name),ffe55e35) + String.IsEqual(Skin.String(gradientcolor.name),ffe55e35) + Skin.HasSetting(EnableMonochromeHighlight) + !Skin.HasSetting(InvertSelectedText)]</expression>
    <expression name="Exp_ColourHighlight_IsPurple">[String.IsEqual(Skin.String(focuscolor.name),ff5528a8) + String.IsEqual(Skin.String(gradientcolor.name),ff5528a8) + Skin.HasSetting(EnableMonochromeHighlight) + !Skin.HasSetting(InvertSelectedText)]</expression>
    <expression name="Exp_ColourHighlight_IsCustom">[![$EXP[Exp_ColourHighlight_IsAqua] | $EXP[Exp_ColourHighlight_IsTropical] | $EXP[Exp_ColourHighlight_IsMiami] | $EXP[Exp_ColourHighlight_IsWhite] | $EXP[Exp_ColourHighlight_IsBlue] | $EXP[Exp_ColourHighlight_IsCoral] | $EXP[Exp_ColourHighlight_IsOrange] | $EXP[Exp_ColourHighlight_IsPurple]]]</expression>

    <expression name="Exp_ColourPreset_MiamiVaporwave">[$EXP[Exp_ColourHighlight_IsMiami] + String.IsEmpty(Skin.String(Background.DialogImage)) + [Skin.String(Background.Image,special://skin/extras/backgrounds/blur/purple_blur.jpg) | String.IsEmpty(Skin.String(Background.Image))]]</expression>
    <expression name="Exp_ColourPreset_AquaClassic">[$EXP[Exp_ColourHighlight_IsAqua] + Skin.String(Background.DialogImage,Green) + Skin.String(Background.Image,special://skin/extras/backgrounds/blur/green_blur.jpg)]</expression>
    <expression name="Exp_ColourPreset_TropicalSunset">[$EXP[Exp_ColourHighlight_IsTropical] + Skin.String(Background.DialogImage,Blush) + Skin.String(Background.Image,special://skin/extras/backgrounds/blur/pink_blur.jpg)]</expression>
    <expression name="Exp_ColourPreset_BlueSlate">[$EXP[Exp_ColourHighlight_IsBlue] + Skin.String(Background.DialogImage,Slate) + Skin.String(Background.Image,special://skin/extras/backgrounds/blur/slate_blur.jpg)]</expression>
    <expression name="Exp_ColourPreset_MidnightPurple">[$EXP[Exp_ColourHighlight_IsPurple] + Skin.String(Background.DialogImage,Coal) + Skin.String(Background.Image,special://skin/extras/backgrounds/blur/coal_blur.jpg)]</expression>

    <!-- ============== -->
    <!-- Home Side Menu -->
    <!-- ============== -->
    <expression name="Exp_HomeMenu_home">[Window.IsVisible(Home)]</expression>
    <expression name="Exp_HomeMenu_movies">[Container.Content(movies) | Container.Content(sets) | String.StartsWith(Container.FolderPath,videodb://movies/) | String.StartsWith(Container.FolderPath,library://video/movies/) | Window.IsVisible(1101)]</expression>
    <expression name="Exp_HomeMenu_tvshows">[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | String.StartsWith(Container.FolderPath,videodb://tvshows/) | String.StartsWith(Container.FolderPath,library://video/tvshows/) | Window.IsVisible(1102) | Window.IsVisible(1130) | Window.IsVisible(1131)]</expression>
    <expression name="Exp_HomeMenu_music">[Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(1103) | Container.Content(musicvideos)]</expression>
    <expression name="Exp_HomeMenu_livetv">[$EXP[Exp_PVRWindows] | Window.IsVisible(1104)]</expression>
    <expression name="Exp_HomeMenu_addons">[Container.Content(addons) | Window.IsVisible(1132) | [Container.Content() + !String.IsEmpty(Container.PluginName)]]</expression>
    <expression name="Exp_HomeMenu_pictures">[Container.Content(images) | Window.IsVisible(MyPics.xml)]</expression>
    <expression name="Exp_HomeMenu_weather">[Window.IsVisible(MyWeather.xml)]</expression>
    <expression name="Exp_HomeMenu_videos">[Container.Content(videos) | [[Container.Content(playlists) | Container.Content(files) | [Container.Content() + String.IsEmpty(Container.PluginName)]] + Window.IsVisible(MyVideoNav.xml)]]</expression>
    <expression name="Exp_HomeMenu_search">[Window.IsVisible(1105)]</expression>
    <expression name="Exp_HomeMenu_settings">[$EXP[Exp_SettingsDialogs]]</expression>
    <expression name="Exp_HomeMenu_custom01">[[Skin.String(CustomShortcut.Custom01,ActivateWindow(1106)) + Window.IsVisible(1106)] | [Skin.String(CustomShortcut.Custom01,ActivateWindow(1107)) + Window.IsVisible(1107)] | [Skin.String(CustomShortcut.Custom01,ActivateWindow(1108)) + Window.IsVisible(1108)] | [Skin.String(CustomShortcut.Custom01,ActivateWindow(1109)) + Window.IsVisible(1109)]]</expression>
    <expression name="Exp_HomeMenu_custom02">[[Skin.String(CustomShortcut.Custom02,ActivateWindow(1106)) + Window.IsVisible(1106)] | [Skin.String(CustomShortcut.Custom02,ActivateWindow(1107)) + Window.IsVisible(1107)] | [Skin.String(CustomShortcut.Custom02,ActivateWindow(1108)) + Window.IsVisible(1108)] | [Skin.String(CustomShortcut.Custom02,ActivateWindow(1109)) + Window.IsVisible(1109)]]</expression>
    <expression name="Exp_HomeMenu_custom03">[[Skin.String(CustomShortcut.Custom03,ActivateWindow(1106)) + Window.IsVisible(1106)] | [Skin.String(CustomShortcut.Custom03,ActivateWindow(1107)) + Window.IsVisible(1107)] | [Skin.String(CustomShortcut.Custom03,ActivateWindow(1108)) + Window.IsVisible(1108)] | [Skin.String(CustomShortcut.Custom03,ActivateWindow(1109)) + Window.IsVisible(1109)]]</expression>
    <expression name="Exp_HomeMenu_custom04">[[Skin.String(CustomShortcut.Custom04,ActivateWindow(1106)) + Window.IsVisible(1106)] | [Skin.String(CustomShortcut.Custom04,ActivateWindow(1107)) + Window.IsVisible(1107)] | [Skin.String(CustomShortcut.Custom04,ActivateWindow(1108)) + Window.IsVisible(1108)] | [Skin.String(CustomShortcut.Custom04,ActivateWindow(1109)) + Window.IsVisible(1109)]]</expression>

    <expression name="Exp_HomeMenu_IsSelected">[[String.IsEqual(ListItem.Property(expression),home) + $EXP[Exp_HomeMenu_home]] | [String.IsEqual(ListItem.Property(expression),movies) + $EXP[Exp_HomeMenu_movies]] | [String.IsEqual(ListItem.Property(expression),tvshows) + $EXP[Exp_HomeMenu_tvshows]] | [String.IsEqual(ListItem.Property(expression),music) + $EXP[Exp_HomeMenu_music]] | [String.IsEqual(ListItem.Property(expression),livetv) + $EXP[Exp_HomeMenu_livetv]] | [String.IsEqual(ListItem.Property(expression),addons) + $EXP[Exp_HomeMenu_addons]] | [String.IsEqual(ListItem.Property(expression),pictures) + $EXP[Exp_HomeMenu_pictures]] | [String.IsEqual(ListItem.Property(expression),weather) + $EXP[Exp_HomeMenu_weather]] | [String.IsEqual(ListItem.Property(expression),videos) + $EXP[Exp_HomeMenu_videos]] | [String.IsEqual(ListItem.Property(expression),custom01) + $EXP[Exp_HomeMenu_custom01]] | [String.IsEqual(ListItem.Property(expression),custom02) + $EXP[Exp_HomeMenu_custom02]] | [String.IsEqual(ListItem.Property(expression),custom03) + $EXP[Exp_HomeMenu_custom03]] | [String.IsEqual(ListItem.Property(expression),custom04) + $EXP[Exp_HomeMenu_custom04]]]</expression>

    <expression name="Exp_HomeMenu_HasFocus">[Control.HasFocus(303) | Control.HasFocus(308) | Control.HasFocus(309)]</expression>


    <!-- ============== -->
    <!-- Standard Views -->
    <!-- ============== -->

    <!-- Discover -->
    <expression name="Exp_View_55">[Container.Content(files) + [String.IsEqual(Container.ListItem.Property(param.info),user_discover) | String.IsEqual(Container.Property(param.info),user_discover)]]</expression>

    <!-- Alphabet -->
    <expression name="Exp_AlphabetTypes_Only">[!$EXP[Exp_View_512] + !Skin.String(Rows.ContentLoopback,Wrap) + !Skin.HasSetting(DisableAlphabetScrollbar) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | [String.IsEqual(Container.SortMethod,$LOCALIZE[557]) + Container.Content(artists)] | [String.IsEqual(Container.SortMethod,$LOCALIZE[558]) + Container.Content(albums)]]]</expression>

    <!-- Scrollbar -->
    <expression name="Exp_AlphabetVisible">[Control.HasFocus(65) + $EXP[Exp_AlphabetTypes_Only]]</expression>
    <expression name="Exp_ScrollbarVisible">[Control.HasFocus(65) | Control.HasFocus(60) | Control.HasFocus(64)]</expression>
    <expression name="Exp_ItemCountVisible">[Control.HasFocus(60) | Control.HasFocus(64) | Control.HasFocus(67) | [Skin.HasSetting(Furniture.EnableCount) + !$EXP[Exp_AlphabetVisible] + String.IsEmpty(Window.Property(MediaFilterBase)) + [![$EXP[Exp_View_502] | $EXP[Exp_View_512] | $EXP[Exp_View_522]] | Skin.HasSetting(Views.UseAltCombined)]]]</expression>

    <!-- Discover Wall -->
    <expression name="Exp_FilterWall_IsDiscover">[Control.IsVisible(55) + !Integer.IsEqual(Container(553).NumItems,0) + !Skin.HasSetting(DisableMediaFilterWall)]</expression>

    <!-- Media Filter Wall -->
    <expression name="Exp_FilterWall_IsMedia">[[Window.IsActive(mediafilter) | !String.IsEmpty(Window.Property(MediaFilterBase)) | Control.HasFocus(67) | $EXP[Exp_ScrollbarVisible]] + $EXP[Exp_FilterWall_IsEnabled] + [Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52)]]</expression>

    <!-- Media Filter Has -->
    <expression name="Exp_FilterWall_IsEnabled">[Window.IsMedia + !Skin.HasSetting(DisableMediaFilterWall)]</expression>

    <expression name="Exp_Navigation_IsBackToStart">[!Skin.String(Rows.ContentLoopback,Wrap)]</expression>


    <!-- ================= -->
    <!-- Windows / Dialogs -->
    <!-- ================= -->
    <expression name="Exp_PVRWindows">[Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRSearch.xml)]</expression>

    <expression name="Exp_InfoDialogs">[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) |  [Window.IsVisible(DialogPVRInfo.xml) + !Skin.HasSetting(Views.UseFullPVRGuide)]]</expression>

    <expression name="Exp_SettingsDialogs">[Window.IsVisible(filemanager) | Window.IsVisible(addonbrowser) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(SkinSettings.xml) | Window.IsVisible(SettingsProfile.xml) | Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(EventLog.xml)]</expression>

    <expression name="Exp_SettingsDialogs_Next">[Window.Next(filemanager) | Window.Next(addonbrowser) | Window.Next(SettingsCategory.xml) | Window.Next(SkinSettings.xml) | Window.Next(SettingsProfile.xml) | Window.Next(SettingsSystemInfo.xml) | Window.Next(EventLog.xml) | Window.Next(1197)]</expression>

    <expression name="Exp_SettingsDialogs_Prev">[Window.Previous(filemanager) | Window.Previous(addonbrowser) | Window.Previous(SettingsCategory.xml) | Window.Previous(SkinSettings.xml) | Window.Previous(SettingsProfile.xml) | Window.Previous(SettingsSystemInfo.xml) | Window.Previous(EventLog.xml) | Window.Previous(1197)]</expression>


    <!-- =============== -->
    <!-- ListItem Status -->
    <!-- =============== -->
    <expression name="Exp_IsFolder">[String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListITem.DBType,artist)]</expression>

    <expression name="Exp_IsGenre">[String.IsEqual(ListItem.DBType,genre) | String.IsEqual(ListItem.Property(dbtype),genre)]</expression>

    <expression name="Exp_IsStudio">[String.IsEqual(ListItem.DBType,studio) | String.IsEqual(ListItem.Property(dbtype),studio)]</expression>

    <expression name="Exp_IsCountry">[String.IsEqual(ListItem.DBType,country) | String.IsEqual(ListItem.Property(dbtype),country)]</expression>

    <expression name="Exp_HasWatchedProgress">[!Skin.HasSetting(Indicator.DisableProgress) + [[ListItem.IsResumable + !Integer.IsEqual(ListItem.PercentPlayed,0)] | [!String.IsEmpty(ListItem.Property(WatchedProgress)) + !Integer.IsEqual(ListItem.Property(WatchedProgress),0)] | [!Integer.IsEqual(ListItem.Progress,0)]]]</expression>

    <expression name="Exp_IsPVRItem">[!String.IsEmpty(ListItem.ChannelNumberLabel) | String.IsEqual(ListItem.Path,pvr://channels/tv/)]</expression>


    <!-- === -->
    <!-- OSD -->
    <!-- === -->
    <expression name="Exp_OSD_HasPlaylist">[VideoPlayer.Content(episodes) | VideoPlayer.Content(livetv) | [VideoPlayer.Content(movies) + !Integer.IsEqual(VideoPlayer.PlaylistLength,1) + !Integer.IsEqual(VideoPlayer.PlaylistLength,0)]]</expression>

    <expression name="Exp_OSD_PVRChannelSwitch">[[VideoPlayer.Content(livetv) + !Window.Isvisible(videoosd)] + [!String.IsEmpty(PVR.ChannelNumberInput) | Player.ShowInfo]]</expression>

    <expression name="Exp_OSD_ExpandInfo">[Window.IsVisible(videobookmarks) | Window.IsVisible(pvrchannelguide) | Window.IsVisible(1140) | Window.IsVisible(1141) | Window.IsVisible(1142) | $EXP[Exp_OSD_FullScreenInfo] | Window.IsVisible(DialogPVRChannelsOSD.xml)]</expression>

    <expression name="Exp_OSD_FullScreenInfo">[Window.IsVisible(DialogFullScreenInfo.xml) | !String.IsEmpty(Window(Home).Property(OSD.FullScreenInfo)) | [System.IdleTime(3) + Skin.HasSetting(OSD.AutoInfoOnPause) + Player.Paused + !Window.IsActivate(videoosd)]]</expression>


    <!-- ==== -->
    <!-- Misc -->
    <!-- ==== -->
    <expression name="Exp_AutoCompletion_IsEnabled">[System.HasAddon(plugin.program.autocompletion) + System.AddonIsEnabled(plugin.program.autocompletion) + !Skin.HasSetting(Keyboard.DisableAutoCompletion)]</expression>

    <expression name="Exp_Video_IsNotPlaying">[!Player.HasVideo | Player.Paused | Skin.HasSetting(Background.VideoDisabled)]</expression>

    <expression name="Exp_Furniture_PVR">[[Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRChannels.xml)] + !Window.IsVisible(DialogPVRInfo.xml)]</expression>

    <expression name="Exp_Group_Bumper_HasFocus">[Control.HasFocus(330) | Control.HasFocus(332) | Control.HasFocus(333)]</expression>

</includes>
