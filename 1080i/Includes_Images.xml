<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <variable name="Image_Shortcut_EnableDisable">
        <value condition="!String.IsEqual(Container(22001).ListItem.Property(disabled),True)">special://skin/extras/icons/circle-cancel.png</value>
        <value>special://skin/extras/icons/circle-check-regular.png</value>
    </variable>

    <variable name="Image_VideoVersion_Fanart">
        <value condition="Control.HasFocus(51) + !String.IsEmpty(Container(51).ListItem.Art(landscape))">$INFO[Container(51).ListItem.Art(landscape)]</value>
        <value condition="Control.HasFocus(51) + !String.IsEmpty(Container(51).ListItem.Art(fanart))">$INFO[Container(51).ListItem.Art(fanart)]</value>
        <value condition="Control.HasFocus(51) + !String.IsEmpty(Container(51).ListItem.Art(thumb))">$INFO[Container(51).ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(Container(50).ListItem.Art(landscape))">$INFO[Container(50).ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(Container(50).ListItem.Art(fanart))">$INFO[Container(50).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(50).ListItem.Art(thumb))">$INFO[Container(50).ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
    </variable>

    <variable name="Image_VideoVersion_Poster">
        <value condition="Control.HasFocus(51) + !String.IsEmpty(Container(51).ListItem.Art(poster))">$INFO[Container(51).ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(Container(50).ListItem.Art(poster))">$INFO[Container(50).ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
    </variable>

    <variable name="Image_Home">
        <value>special://skin/extras/icons/home.png</value>
    </variable>

    <variable name="Image_Setting_Shortcuts_Locked">
        <value condition="!Skin.HasSetting(KioskMode.HubConfigurationUnlocked)">special://skin/extras/icons/lock.png</value>
        <value>special://skin/extras/icons/lock-open.png</value>
    </variable>

    <variable name="Image_Foreground_Cheater_Parent_Divert">
        <value condition="Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301) + Integer.IsEqual(Container(301).NumItems,0) + !Container(301).IsUpdating + !String.IsEmpty(Container(99971).ListItem.PicturePath)">$INFO[Container(99971).ListItem.PicturePath]</value>
        <value>$VAR[Image_Foreground_Cheater_Parent]</value>
    </variable>

    <variable name="Image_Background_Cheater_Parent_Divert">
        <value condition="Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301) + Integer.IsEqual(Container(301).NumItems,0) + !Container(301).IsUpdating + !String.IsEmpty(Container(99971).ListItem.PicturePath)">$INFO[Container(99971).ListItem.PicturePath]</value>
        <value>$VAR[Image_Background_Cheater_Parent]</value>
    </variable>

    <variable name="Image_OSD_PVR_Icon">
        <value condition="!String.IsEmpty(Pvr.EPGEventIcon)">$INFO[Pvr.EPGEventIcon]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Art(landscape))">$INFO[VideoPlayer.Art(landscape)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Art(tvshow.landscape))">$INFO[VideoPlayer.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(Player.Art(landscape))">$INFO[Player.Art(landscape)]</value>
        <value condition="!String.IsEmpty(Player.Art(tvshow.landscape))">$INFO[Player.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Art(fanart))">$INFO[VideoPlayer.Art(fanart)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Art(tvshow.fanart))">$INFO[VideoPlayer.Art(tvshow.fanart)]</value>
        <value condition="!String.IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Player.Art(tvshow.fanart))">$INFO[Player.Art(tvshow.fanart)]</value>
        <value>$INFO[Player.Art(icon)]</value>
    </variable>

    <variable name="Image_FullscreenWidget_Artwork">
        <value condition="!String.IsEmpty(Container(301).ListItem.Art(fanart))">$INFO[Container(301).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.Art(season.fanart))">$INFO[Container(301).ListItem.Art(season.fanart)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.Art(album.fanart))">$INFO[Container(301).ListItem.Art(album.fanart)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.Art(artist.fanart))">$INFO[Container(301).ListItem.Art(artist.fanart)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.Art(tvshow.fanart))">$INFO[Container(301).ListItem.Art(tvshow.fanart)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.Art(landscape))">$INFO[Container(301).ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.Art(season.landscape))">$INFO[Container(301).ListItem.Art(season.landscape)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.Art(album.landscape))">$INFO[Container(301).ListItem.Art(album.landscape)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.Art(artist.landscape))">$INFO[Container(301).ListItem.Art(artist.landscape)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.Art(tvshow.landscape))">$INFO[Container(301).ListItem.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.EPGEventIcon)">$INFO[Container(301).ListItem.EPGEventIcon]</value>
        <value condition="String.IsEqual(Container(301).ListItem.DBtype,movie) | String.IsEqual(Container(301).ListItem.DBtype,set)">special://skin/extras/backgrounds/fallbacks/film.jpg</value>
        <value condition="String.IsEqual(Container(301).ListItem.DBtype,artist) | String.IsEqual(Container(301).ListItem.DBtype,album) | String.IsEqual(Container(301).ListItem.DBtype,song) | String.IsEqual(Container(301).ListItem.DBtype,musicvideo)">special://skin/extras/backgrounds/fallbacks/music.jpg</value>
        <value condition="String.IsEqual(Container(301).ListItem.DBtype,tvshow) | String.IsEqual(Container(301).ListItem.DBtype,season) | String.IsEqual(Container(301).ListItem.DBtype,episode) | String.IsEqual(Container(301).ListItem.DBtype,video)">special://skin/extras/backgrounds/fallbacks/tv.jpg</value>
    </variable>

    <variable name="Image_DialogInfo_Poster">
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(poster))">$INFO[Container(99950).ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(season.poster))">$INFO[Container(99950).ListItem.Art(season.poster)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(tvshow.poster))">$INFO[Container(99950).ListItem.Art(tvshow.poster)]</value>
    </variable>

    <variable name="Image_Layout_CombinedThumb">
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Icon) + !String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="Image_Layout_CombinedIcon">
        <value condition="!String.IsEmpty(ListItem.Property(icon))">$INFO[ListItem.Property(icon)]</value>
        <value condition="String.IsEqual(ListItem.DBType,tag)">special://skin/extras/icons/tag.png</value>
        <value condition="String.IsEqual(ListItem.DBType,director)">special://skin/extras/icons/clapperboard.png</value>
        <value condition="String.IsEqual(ListItem.Icon,DefaultFolder.png)">special://skin/extras/icons/folder.png</value>
        <value condition="String.IsEqual(ListItem.Icon,DefaultPlaylist.png)">special://skin/extras/icons/list-check.png</value>
        <value condition="String.IsEqual(ListItem.Icon,DefaultPartyMode.png)">special://skin/extras/icons/list-check.png</value>
        <value condition="String.IsEqual(ListItem.Icon,DefaultAddSource.png)">special://skin/extras/icons/file-circle-plus.png</value>
        <value condition="String.IsEqual(ListItem.Icon,DefaultFile.png)">special://skin/extras/icons/file-circle-plus.png</value>
    </variable>

    <variable name="Image_SettingsWindow">
        <value condition="Window.IsVisible(systeminfo)">special://skin/extras/icons/sysinfo.png</value>
        <value condition="Window.IsVisible(SkinSettings)">special://skin/extras/icons/paintbrush.png</value>
        <value condition="Window.IsVisible(InterfaceSettings)">special://skin/extras/icons/skinsettings.png</value>
        <value condition="Window.IsVisible(MediaSettings)">special://skin/extras/icons/tags.png</value>
        <value condition="Window.IsVisible(PlayerSettings)">special://skin/extras/icons/equalizer.png</value>
        <value condition="Window.IsVisible(SystemSettings)">special://skin/extras/icons/configure.png</value>
        <value condition="Window.IsVisible(servicesettings)">special://skin/extras/icons/network.png</value>
        <value condition="Window.IsVisible(pvrsettings)">special://skin/extras/icons/livetv.png</value>
        <value condition="Window.IsVisible(Profiles)">special://skin/extras/icons/actor.png</value>
        <value condition="Window.IsVisible(addonbrowser)">special://skin/extras/icons/addon.png</value>
        <value condition="Window.IsVisible(eventlog)">special://skin/extras/icons/list-check.png</value>
    </variable>

    <variable name="Image_AddonStatus">
        <value condition="!String.IsEmpty(ListItem.AddonBroken)">indicator/broken.png</value>
        <value condition="ListItem.Property(addon.orphaned)">indicator/orphaned.png</value>
        <value condition="ListItem.Property(addon.downloading)">indicator/download.png</value>
        <value condition="ListItem.Property(addon.isinstalled) + !ListItem.Property(addon.isenabled)">indicator/disabled.png</value>
        <value condition="ListItem.Property(addon.hasupdate)">indicator/update.png</value>
        <value condition="ListItem.Property(addon.isinstalled)">indicator/library.png</value>
    </variable>

    <variable name="Image_AddonsOrigin">
        <value condition="ListItem.Property(Addon.IsFromOfficialRepo) + ListItem.IsAutoUpdateable">indicator/official.png</value>
        <value condition="ListItem.Property(Addon.IsFromOfficialRepo)">indicator/official-pinned.png</value>
        <value condition="String.IsEqual(ListItem.AddonOrigin,$LOCALIZE[25014]) + ListItem.IsAutoUpdateable">indicator/manual.png</value>
        <value condition="String.IsEqual(ListItem.AddonOrigin,$LOCALIZE[25014])">indicator/manual-pinned.png</value>
        <value condition="ListItem.IsAutoUpdateable">indicator/install.png</value>
        <value>indicator/install-pinned.png</value>
    </variable>

    <variable name="Image_ProfileIcon">
        <value condition="!String.IsEqual(ListItem.Icon,DefaultUser.png) + !String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value>$INFO[ListItem.CurrentItem,special://skin/extras/backgrounds/launch/Mountains (,).jpg]</value>
    </variable>

    <variable name="Image_ProfileThumb">
        <value condition="!String.IsEmpty(Skin.String(SkinVariables.SkinUser.Icon))">$INFO[Skin.String(SkinVariables.SkinUser.Icon)]</value>
        <value condition="!String.IsEmpty(Skin.String(SkinVariables.SkinUser.Name))">$INFO[Window(Home).Property(System.ProfileNumber),special://skin/extras/backgrounds/launch/Mountains (,).jpg]</value>
        <value condition="!String.IsEqual(System.ProfileThumb,DefaultUser.png) + !String.IsEmpty(System.ProfileThumb)">$INFO[System.ProfileThumb]</value>
        <value>$INFO[Window(Home).Property(System.ProfileNumber),special://skin/extras/backgrounds/launch/Mountains (,).jpg]</value>
    </variable>

    <variable name="Image_Scrollbar_NumItems">
        <value condition="!String.IsEmpty(Container.TotalWatched) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(videos) | Container.Content(sets)] + ![Control.HasFocus(503) | Control.HasFocus(513) | Control.HasFocus(523)]">special://skin/extras/icons/eye2.png</value>

        <value condition="Container.Content(seasons) + Control.HasFocus(503) + !String.IsEmpty(Container(502).ListItem.Property(watchedepisodes))">special://skin/extras/icons/eye2.png</value>
        <value condition="Container.Content(seasons) + Control.HasFocus(513) + !String.IsEmpty(Container(512).ListItem.Property(watchedepisodes))">special://skin/extras/icons/eye2.png</value>
        <value condition="Container.Content(seasons) + Control.HasFocus(523) + !String.IsEmpty(Container(522).ListItem.Property(watchedepisodes))">special://skin/extras/icons/eye2.png</value>

        <value condition="$EXP[Exp_View_502]">special://skin/extras/icons/grip.png</value>
        <value condition="$EXP[Exp_View_512]">special://skin/extras/icons/grip.png</value>
        <value condition="$EXP[Exp_View_522]">special://skin/extras/icons/grip.png</value>
        <value>special://skin/extras/icons/grip.png</value>
    </variable>

    <variable name="Image_Player_Status">
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.Player.Status),Returning Series)">flags/$VAR[Info_Line_Rating_Style]/status/target.png</value>
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.Player.Status),Post Production)">flags/$VAR[Info_Line_Rating_Style]/status/target.png</value>
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.Player.Status),Canceled)">flags/$VAR[Info_Line_Rating_Style]/status/circle-exclamation.png</value>
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.Player.Status),Ended)">flags/$VAR[Info_Line_Rating_Style]/status/circle-check.png</value>
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.Player.Status),Released)">flags/$VAR[Info_Line_Rating_Style]/status/circle-check.png</value>
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.Player.Status),In Production)">flags/$VAR[Info_Line_Rating_Style]/status/clapperboard.png</value>
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.Player.Status),Planned)">flags/$VAR[Info_Line_Rating_Style]/status/clipboard-list.png</value>
        <value>flags/$VAR[Info_Line_Rating_Style]/status/announce.png</value>
    </variable>

    <variable name="Image_ListItem_Status">
        <value condition="String.IsEqual(Container(99950).ListItem.Property(Status),Returning Series) | String.IsEqual(Container(99950).ListItem.Status,Returning Series)">flags/$VAR[Info_Line_Rating_Style]/status/target.png</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Property(Status),Post Production) | String.IsEqual(Container(99950).ListItem.Status,Post Production)">flags/$VAR[Info_Line_Rating_Style]/status/target.png</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Property(Status),Canceled) | String.IsEqual(Container(99950).ListItem.Status,Canceled)">flags/$VAR[Info_Line_Rating_Style]/status/circle-exclamation.png</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Property(Status),Ended) | String.IsEqual(Container(99950).ListItem.Status,Ended)">flags/$VAR[Info_Line_Rating_Style]/status/circle-check.png</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Property(Status),Released) | String.IsEqual(Container(99950).ListItem.Status,Released)">flags/$VAR[Info_Line_Rating_Style]/status/circle-check.png</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Property(Status),In Production) | String.IsEqual(Container(99950).ListItem.Status,In Production)">flags/$VAR[Info_Line_Rating_Style]/status/announce.png</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Property(Status),Planned) | String.IsEqual(Container(99950).ListItem.Status,Planned)">flags/$VAR[Info_Line_Rating_Style]/status/clipboard-list.png</value>
        <value>flags/$VAR[Info_Line_Rating_Style]/status/announce.png</value>
    </variable>

    <variable name="Image_SimpleDialogBackground">
        <value condition="$EXP[Exp_DialogTheme_IsLight]">special://skin/extras/backgrounds/dialogs/chalk_blur.png</value>
        <value condition="Skin.String(Background.DialogImage,Blue)">special://skin/extras/backgrounds/dialogs/blue_blur.png</value>
        <value condition="Skin.String(Background.DialogImage,Purple)">special://skin/extras/backgrounds/dialogs/purple_blur.png</value>
        <value condition="Skin.String(Background.DialogImage,Pink)">special://skin/extras/backgrounds/dialogs/pink_blur.png</value>
        <value condition="Skin.String(Background.DialogImage,Green)">special://skin/extras/backgrounds/dialogs/green_blur.png</value>
        <value condition="Skin.String(Background.DialogImage,Slate)">special://skin/extras/backgrounds/dialogs/slate_blur.png</value>
        <value condition="Skin.String(Background.DialogImage,Blush)">special://skin/extras/backgrounds/dialogs/blush_blur.png</value>
        <value condition="Skin.String(Background.DialogImage,Coal)">special://skin/extras/backgrounds/dialogs/coal_blur.png</value>
        <value condition="Skin.String(Background.DialogImage,Chalk)">special://skin/extras/backgrounds/dialogs/chalk_blur.png</value>
        <value>special://skin/extras/backgrounds/dialogs/classic_blur.png</value>
    </variable>

    <variable name="Image_SimpleBackground">
        <value condition="!String.IsEmpty(Skin.String(Background.Image))">$INFO[Skin.String(Background.Image)]</value>
        <value>special://skin/extras/backgrounds/blur/purple_blur.jpg</value>
    </variable>

    <variable name="Image_WidgetBackground">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(base_fanart))">$INFO[Container(99950).ListItem.Property(base_fanart)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(fanart))">$INFO[Container(99950).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(tvshow.fanart))">$INFO[Container(99950).ListItem.Art(tvshow.fanart)]</value>
    </variable>

    <variable name="Image_CropLogo">
        <value condition="!String.IsEmpty(Window(Home).Property(CropImage)) + String.IsEmpty(Window(Home).Property(TMDbHelper.Image.Override))">$INFO[Window(Home).Property(CropImage)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.CropImage))">$INFO[Window(Home).Property(TMDBHelper.ListItem.CropImage)]</value>
    </variable>

    <variable name="Image_OSD_PosterImage">
        <value condition="!String.IsEmpty(VideoPlayer.Art(poster))">$INFO[VideoPlayer.Art(poster)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Art(tvshow.poster))">$INFO[VideoPlayer.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
        <value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
    </variable>

    <variable name="Image_Background_Blur">
        <value condition="!String.IsEmpty(Window(Home).Property(BlurImage)) + String.IsEmpty(Window(Home).Property(TMDbHelper.Image.Override))">$INFO[Window(Home).Property(BlurImage)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.SimpleBackground.BlurImage)) + $EXP[Exp_SettingsDialogs]">$INFO[Window(Home).Property(TMDbHelper.SimpleBackground.BlurImage)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.FallbackBackground.BlurImage)) + Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301) + Integer.IsEqual(Container(301).NumItems,0)">$INFO[Window(Home).Property(TMDbHelper.FallbackBackground.BlurImage)]</value>
        <value>$INFO[Window(Home).Property(TMDbHelper.ListItem.BlurImage)]</value>
    </variable>

    <variable name="Image_Foreground_FlixArt">
        <value condition="!String.IsEmpty(Window(Home).Property(BlurImage.Original)) + String.IsEmpty(Window(Home).Property(TMDbHelper.Image.Override))">$INFO[Window(Home).Property(BlurImage.Original)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.SimpleBackground.BlurImage.Original)) + $EXP[Exp_SettingsDialogs]">$INFO[Window(Home).Property(TMDbHelper.SimpleBackground.BlurImage.Original)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.FallbackBackground.BlurImage.Original)) + Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301) + Integer.IsEqual(Container(301).NumItems,0)">$INFO[Window(Home).Property(TMDbHelper.FallbackBackground.BlurImage.Original)]</value>
        <value>$INFO[Window(Home).Property(TMDbHelper.ListItem.BlurImage.Original)]</value>
    </variable>

    <variable name="Image_Foreground">
        <value condition="Skin.HasSetting(TMDbHelper.EnableBlur)">$VAR[Image_Foreground_FlixArt]</value>
        <value>$VAR[Image_Foreground_Cheater_Parent_Divert]</value>
    </variable>

    <variable name="Image_Background_Overlay">
        <value condition="!String.ISEmpty(Window(Home).Property(TMDbHelper.ListItem.BlurImage)) + !String.IsEqual(Window(Home).Property(TMDbHelper.ListItem.BlurImage.Original),special://skin/extras/backgrounds/blur/purple_blur.jpg)">background/combined_overlay.png</value>
        <value>background/combined_flixart.png</value>
    </variable>

    <variable name="Image_OtherIcon">
        <value condition="$EXP[Exp_IsStudio]">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
        <value condition="$EXP[Exp_IsCountry]">$INFO[ListItem.Label,resource://resource.images.moviecountryicons.maps/,.png]</value>
    </variable>

    <variable name="Image_ResourceIcon">
        <value condition="$EXP[Exp_IsGenre]">$VAR[Image_GenreIcon]</value>
        <value>$VAR[Image_OtherIcon]</value>
    </variable>

    <variable name="Image_StartUp">
        <value condition="!String.IsEmpty(Skin.String(Startup.ImageFolder))">$INFO[Skin.String(Startup.ImageFolder)]</value>
        <value>special://skin/extras/backgrounds/launch/</value>
    </variable>

    <variable name="Image_PVRPoster">
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(poster))">$INFO[Container(99950).ListItem.Art(poster)]</value>
    </variable>

    <variable name="Image_GenreIcon">
        <value condition="System.HasAddon(resource.images.moviegenreicons.horizon)">$INFO[ListItem.Label,resource://resource.images.moviegenreicons.horizon/,.png]</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.transparent)">$INFO[ListItem.Label,resource://resource.images.moviegenreicons.transparent/,.png]</value>
    </variable>

    <variable name="Image_DiscArt">
        <value condition="!String.IsEmpty(ListItem.Art(discart))">$INFO[ListItem.Art(discart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(album.discart))">$INFO[ListItem.Art(album.discart)]</value>
    </variable>

    <variable name="Image_FullscreenWidget_PlayButton">
        <value condition="Container(301).ListItem.IsFolder">special://skin/extras/icons/folder.png</value>
        <value>special://skin/extras/icons/play2.png</value>
    </variable>

    <variable name="Image_FullscreenWidget_InfoButton">
        <value condition="Skin.String(Movement.Spotlight.OnInfo,Menu)">special://skin/extras/icons/indent.png</value>
        <value>special://skin/extras/icons/info2.png</value>
    </variable>

    <variable name="Image_VideoInfo_PlayButton">
        <!-- <value condition="ListItem.HasVideoVersions">special://skin/extras/icons/table-list.png</value> -->
        <value condition="$EXP[Exp_IsFolder]">special://skin/extras/icons/folder.png</value>
        <value>special://skin/extras/icons/circle-play.png</value>
    </variable>

    <variable name="Image_ArtistFanartVis">
        <value condition="System.HasAddon(script.artistslideshow) + !Skin.HasSetting(ArtistSlideShow.Disabled) + !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image))">$INFO[Window(Visualisation).Property(ArtistSlideshow.Image)]</value>
        <value condition="[!System.HasAddon(script.artistslideshow) | Skin.HasSetting(ArtistSlideShow.Disabled) | String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image))] + !String.IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
        <value>common/null.png</value>
    </variable>

    <variable name="Image_OSD_Repeat">
        <value condition="Playlist.IsRepeatOne">special://skin/extras/icons/repeat-one.png</value>
        <value condition="Playlist.IsRepeat">special://skin/extras/icons/repeat.png</value>
        <value>special://skin/extras/icons/repeat-off.png</value>
    </variable>

    <variable name="Image_OSD_Shuffle">
        <value condition="Playlist.IsRandom">special://skin/extras/icons/shuffle.png</value>
        <value>special://skin/extras/icons/shuffle-off.png</value>
    </variable>

    <variable name="Image_UpNext">
        <value condition="!String.IsEmpty(Window.Property(landscape))">$INFO[Window.Property(landscape)]</value>
        <value condition="!String.IsEmpty(Window.Property(fanart))">$INFO[Window.Property(fanart)]</value>
        <value condition="!String.IsEmpty(Window.Property(thumb))">$INFO[Window.Property(thumb)]</value>
    </variable>

    <variable name="Image_IsCurrentStream">
        <value condition="!String.IsEmpty(ListItem.Property(iscurrent))">buttons/check-on.png</value>
        <value>buttons/check-off.png</value>
    </variable>

    <variable name="Image_OSD_VideoQuality">
        <value condition="Integer.IsGreater(VideoPlayer.VideoResolution,1080) | String.IsEqual(VideoPlayer.VideoResolution,4K)">flags/quality/4k.png</value>
        <value condition="Integer.IsGreater(VideoPlayer.VideoResolution,720)">flags/quality/fhd.png</value>
        <value condition="Integer.IsGreater(VideoPlayer.VideoResolution,719)">flags/quality/hd.png</value>
        <value condition="!String.IsEmpty(VideoPlayer.VideoResolution)">flags/quality/sd.png</value>
        <value condition="True">flags/quality/info.png</value>
    </variable>

    <variable name="Image_Trailer_PlayPause">
        <value condition="Player.Paused">special://skin/extras/icons/play2.png</value>
        <value>special://skin/extras/icons/pause.png</value>
    </variable>

    <variable name="Image_OSD_PlayPause">
        <value condition="Player.Paused">special://skin/extras/icons/pause.png</value>
        <value condition="Player.Forwarding">special://skin/extras/icons/forward.png</value>
        <value condition="Player.Rewinding">special://skin/extras/icons/backward.png</value>
        <value>special://skin/extras/icons/play2.png</value>
    </variable>

    <variable name="Image_NowPlaying_PlayPause">
        <value condition="Player.Paused">special://skin/extras/icons/pause.png</value>
        <value condition="Player.Forwarding">special://skin/extras/icons/forward.png</value>
        <value condition="Player.Rewinding">special://skin/extras/icons/backward.png</value>
        <value>special://skin/extras/icons/play2.png</value>
    </variable>

    <variable name="Image_CombinedStudio">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(base_studio))">$INFO[Container(99950).ListItem.Property(base_studio),resource://resource.images.studios.coloured/,.png]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Network.1.Name))">$INFO[Container(99950).ListItem.Property(Network.1.Name),resource://resource.images.studios.coloured/,.png]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Studio.1.Name))">$INFO[Container(99950).ListItem.Property(Studio.1.Name),resource://resource.images.studios.coloured/,.png]</value>
    </variable>

    <variable name="Image_OSD_CombinedStudio">
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Network.1.Name))">$INFO[Window(Home).Property(TMDbHelper.Player.Network.1.Name),resource://resource.images.studios.coloured/,.png]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Studio.1.Name))">$INFO[Window(Home).Property(TMDbHelper.Player.Studio.1.Name),resource://resource.images.studios.coloured/,.png]</value>
    </variable>

    <variable name="Image_DirectorIcon">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Director.1.Name)) + !String.IsEmpty(Container(99950).ListItem.Property(Director.1.job)) + String.IsEqual(Container(99950).ListItem.Property(Director.1.job),Director)">$INFO[Container(99950).ListItem.Property(Director.1.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Director.2.Name)) + !String.IsEmpty(Container(99950).ListItem.Property(Director.2.job)) + String.IsEqual(Container(99950).ListItem.Property(Director.2.job),Director)">$INFO[Container(99950).ListItem.Property(Director.2.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Director.3.Name)) + !String.IsEmpty(Container(99950).ListItem.Property(Director.3.job)) + String.IsEqual(Container(99950).ListItem.Property(Director.3.job),Director)">$INFO[Container(99950).ListItem.Property(Director.3.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Director.1.Name))">$INFO[Container(99950).ListItem.Property(Director.1.Thumb)]</value>
    </variable>
    <variable name="Image_OSD_DirectorIcon">
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Director.1.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Director.1.job)) + String.IsEqual(Window(Home).Property(TMDbHelper.Player.Director.1.job),Director)">$INFO[Window(Home).Property(TMDbHelper.Player.Director.1.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Director.2.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Director.2.job)) + String.IsEqual(Window(Home).Property(TMDbHelper.Player.Director.2.job),Director)">$INFO[Window(Home).Property(TMDbHelper.Player.Director.2.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Director.3.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Director.3.job)) + String.IsEqual(Window(Home).Property(TMDbHelper.Player.Director.3.job),Director)">$INFO[Window(Home).Property(TMDbHelper.Player.Director.3.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Director.1.Name))">$INFO[Window(Home).Property(TMDbHelper.Player.Director.1.Thumb)]</value>
    </variable>

    <variable name="Image_WriterIcon">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Writer.1.Name)) + !String.IsEmpty(Container(99950).ListItem.Property(Writer.1.job)) + [String.IsEqual(Container(99950).ListItem.Property(Writer.1.job),Writer) | String.IsEqual(Container(99950).ListItem.Property(Writer.1.job),Screenplay)]">$INFO[Container(99950).ListItem.Property(Writer.1.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Writer.2.Name)) + !String.IsEmpty(Container(99950).ListItem.Property(Writer.2.job)) + [String.IsEqual(Container(99950).ListItem.Property(Writer.2.job),Writer) | String.IsEqual(Container(99950).ListItem.Property(Writer.2.job),Screenplay)]">$INFO[Container(99950).ListItem.Property(Writer.2.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Writer.3.Name)) + !String.IsEmpty(Container(99950).ListItem.Property(Writer.3.job)) + [String.IsEqual(Container(99950).ListItem.Property(Writer.3.job),Writer) | String.IsEqual(Container(99950).ListItem.Property(Writer.3.job),Screenplay)]">$INFO[Container(99950).ListItem.Property(Writer.3.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Writer.1.Name))">$INFO[Container(99950).ListItem.Property(Writer.1.Thumb)]</value>
    </variable>
    <variable name="Image_OSD_WriterIcon">
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Writer.1.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Writer.1.job)) + [String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.1.job),Writer) | String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.1.job),Screenplay)]">$INFO[Window(Home).Property(TMDbHelper.Player.Writer.1.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Writer.2.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Writer.2.job)) + [String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.2.job),Writer) | String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.2.job),Screenplay)]">$INFO[Window(Home).Property(TMDbHelper.Player.Writer.2.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Writer.3.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Writer.3.job)) + [String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.3.job),Writer) | String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.3.job),Screenplay)]">$INFO[Window(Home).Property(TMDbHelper.Player.Writer.3.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Writer.1.Name))">$INFO[Window(Home).Property(TMDbHelper.Player.Writer.1.Thumb)]</value>
    </variable>

    <variable name="Image_CreatorIcon">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Creator.1.Thumb))">$INFO[Container(99950).ListItem.Property(Creator.1.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Creator.2.Thumb))">$INFO[Container(99950).ListItem.Property(Creator.2.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Creator.3.Thumb))">$INFO[Container(99950).ListItem.Property(Creator.3.Thumb)]</value>
    </variable>
    <variable name="Image_OSD_CreatorIcon">
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Creator.1.Thumb))">$INFO[Window(Home).Property(TMDbHelper.Player.Creator.1.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Creator.2.Thumb))">$INFO[Window(Home).Property(TMDbHelper.Player.Creator.2.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Creator.3.Thumb))">$INFO[Window(Home).Property(TMDbHelper.Player.Creator.3.Thumb)]</value>
    </variable>

    <variable name="Image_OSD_StudioIcon">
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Studio.1.Name))">$INFO[Window(Home).Property(TMDbHelper.Player.Studio.1.Name),resource://resource.images.studios.coloured/,.png]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Network.1.Name))">$INFO[Window(Home).Property(TMDbHelper.Player.Network.1.Name),resource://resource.images.studios.coloured/,.png]</value>
    </variable>

    <variable name="Image_OSD_Clearlogo">
        <value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(Player.Art(artist.clearlogo))">$INFO[Player.Art(artist.clearlogo)]</value>
    </variable>

    <variable name="Image_MuteBug">
        <value condition="Player.Muted">special://skin/extras/icons/mute.png</value>
        <value>special://skin/extras/icons/settings.png</value>
    </variable>

    <variable name="Image_ClearArt">
        <value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearart))">$INFO[ListItem.Art(tvshow.clearart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(artist.clearart))">$INFO[ListItem.Art(artist.clearart)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(clearart))">$INFO[Container(99950).ListItem.Art(clearart)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(tvshow.clearart))">$INFO[Container(99950).ListItem.Art(tvshow.clearart)]</value>
    </variable>

    <variable name="Image_PVRGrpMgr_HideGroup">
        <value condition="String.IsEqual(Control.GetLabel(25),_ (*))">special://skin/extras/icons/watched-hide.png</value>
        <value>special://skin/extras/icons/watched-show.png</value>
    </variable>

    <variable name="Image_AddonInfo_Enable">
        <value condition="String.IsEqual(Control.GetLabel(7),$LOCALIZE[24021])">special://skin/extras/icons/enabled.png</value>
        <value>special://skin/extras/icons/disabled.png</value>
    </variable>

    <variable name="Image_AddonInfo_Install">
        <value condition="String.IsEqual(Control.GetLabel(6),$LOCALIZE[24037])">special://skin/extras/icons/uninstall.png</value>
        <value>special://skin/extras/icons/download.png</value>
    </variable>

    <variable name="Image_Watched">
        <value condition="System.Setting(hidewatched)">special://skin/extras/icons/watched-hide.png</value>
        <value>special://skin/extras/icons/watched-show.png</value>
    </variable>

    <variable name="Image_Filtered">
        <value condition="Container.Filtered | !String.IsEmpty(Control.GetLabel(19).index(1))">special://skin/extras/icons/filter-circle-check.png</value>
        <value>special://skin/extras/icons/filter-circle-xmark.png</value>
    </variable>

    <variable name="Image_SortDirection">
        <value condition="!String.IsEmpty(Window.Property(MediaFilter.SortHow)) + Window.IsMedia + String.IsEqual(Container.FolderName,Skin Variables) + !String.IsEmpty(Window.Property(MediaFilter.BaseDir.Name))">special://skin/extras/icons/arrow-down-z-a.png</value>
        <value condition="String.IsEmpty(Window.Property(MediaFilter.SortHow)) + Window.IsMedia + String.IsEqual(Container.FolderName,Skin Variables) + !String.IsEmpty(Window.Property(MediaFilter.BaseDir.Name))">special://skin/extras/icons/arrow-up-z-a.png</value>
        <value condition="Container.SortDirection(Descending)">special://skin/extras/icons/arrow-down-z-a.png</value>
        <value>special://skin/extras/icons/arrow-up-z-a.png</value>
    </variable>

    <variable name="Image_ContextPoster">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(base_poster))">$INFO[Container(99950).ListItem.Property(base_poster)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(poster))">$INFO[Container(99950).ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(tvshow.poster))">$INFO[Container(99950).ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(base_icon))">$INFO[Container(99950).ListItem.Property(base_icon)]</value>
        <value>fallback/kodi-logo.png</value>
    </variable>

    <variable name="Image_RipSource">
        <value condition="String.Contains(ListItem.FileNameAndPath,2160p) | String.Contains(ListItem.FileNameAndPath,UHD) | String.Contains(ListItem.FileNameAndPath,UltraHD) | String.Contains(ListItem.FileNameAndPath,Ultra-HD) | String.Contains(ListItem.FileNameAndPath,4K)">other/4K.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,blu-ray) | String.Contains(ListItem.FileNameAndPath,bluray) | String.Contains(ListItem.FileNameAndPath,bdrip) | String.Contains(ListItem.FileNameAndPath,bd25) | String.Contains(ListItem.FileNameAndPath,bd50)">other/bluray.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,hddvd) | String.Contains(ListItem.FileNameAndPath,hd-dvd)">other/hddvd.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,dvd)">other/dvd.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,hdtv) | String.Contains(ListItem.FileNameAndPath,pdtv) | String.Contains(ListItem.FileNameAndPath,dsr)">other/hdtv.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,sdtv)">other/sdtv.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,web-dl) | String.Contains(ListItem.FileNameAndPath,webdl) | String.Contains(ListItem.FileNameAndPath,WEBRip) | String.EndsWith(ListItem.FileNameAndPath,.strm) | [String.IsEmpty(ListItem.VideoCodec) + String.IsEmpty(ListItem.AudioCodec)]">other/web-dl.png</value>
        <value>common/null.png</value>
    </variable>
    <variable name="Image_OSD_RipSource">
        <value condition="String.Contains(Player.FileNameAndPath,2160p) | String.Contains(Player.FileNameAndPath,UHD) | String.Contains(Player.FileNameAndPath,UltraHD) | String.Contains(Player.FileNameAndPath,Ultra-HD) | String.Contains(Player.FileNameAndPath,4K)">other/4K.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,blu-ray) | String.Contains(Player.FileNameAndPath,bluray) | String.Contains(Player.FileNameAndPath,bdrip) | String.Contains(Player.FileNameAndPath,bd25) | String.Contains(Player.FileNameAndPath,bd50)">other/bluray.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,hddvd) | String.Contains(Player.FileNameAndPath,hd-dvd)">other/hddvd.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,dvd)">other/dvd.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,hdtv) | String.Contains(Player.FileNameAndPath,pdtv) | String.Contains(Player.FileNameAndPath,dsr)">other/hdtv.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,sdtv)">other/sdtv.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,web-dl) | String.Contains(Player.FileNameAndPath,webdl) | String.Contains(Player.FileNameAndPath,WEBRip) | String.EndsWith(Player.FileNameAndPath,.strm) | [String.IsEmpty(VideoPlayer.VideoCodec) + String.IsEmpty(VideoPlayer.AudioCodec)]">other/web-dl.png</value>
        <value>common/null.png</value>
    </variable>


    <variable name="Image_OSD_AudioCodec">
        <value condition="String.Contains(Player.FileNameAndPath,atmos)">audio/atmos.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,dtsx) | String.Contains(Player.FileNameAndPath,dts-x) | String.Contains(Player.FileNameAndPath,dts:x)">audio/dtsx.png</value>
        <value>audio/$INFO[VideoPlayer.AudioCodec].png</value>
    </variable>

    <variable name="Image_Player_RottenTomatoes">
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.Player.RottenTomatoes_Image),certified)">certified.png</value>
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.Player.RottenTomatoes_Image),fresh)">rtfresh.png</value>
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.Player.RottenTomatoes_Image),rotten)">rtrotten.png</value>
        <value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.Player.RottenTomatoes_Rating))">rtfresh.png</value>
        <value condition="Integer.IsGreater(Window(Home).Property(TMDbHelper.Player.RottenTomatoes_Rating),59)">rtfresh.png</value>
        <value>rtfresh.png</value>
    </variable>

    <variable name="Image_ListItem_RottenTomatoes">
        <value condition="String.IsEqual(Container(99950).ListItem.Property(RottenTomatoes_Image),certified)">certified.png</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Property(RottenTomatoes_Image),fresh)">rtfresh.png</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Property(RottenTomatoes_Image),rotten)">rtrotten.png</value>
        <value condition="String.IsEmpty(Container(99950).ListItem.Property(RottenTomatoes_Rating))">rtfresh.png</value>
        <value condition="Integer.IsGreater(Container(99950).ListItem.Property(RottenTomatoes_Rating),59)">rtfresh.png</value>
        <value>rtfresh.png</value>
    </variable>

    <variable name="Image_Player_RottenTomatoes_UserMeter">
        <value condition="Integer.IsGreater(Window(Home).Property(TMDbHelper.Player.RottenTomatoes_UserMeter),59) | String.IsEmpty(Window(Home).Property(TMDbHelper.Player.RottenTomatoes_UserMeter))">popcorn.png</value>
        <value>popcorn_spilt.png</value>
    </variable>

    <variable name="Image_ListItem_RottenTomatoes_UserMeter">
        <value condition="Integer.IsGreater(Container(99950).ListItem.Property(RottenTomatoes_UserMeter),59) | String.IsEmpty(Container(99950).ListItem.Property(RottenTomatoes_UserMeter))">popcorn.png</value>
        <value>popcorn_spilt.png</value>
    </variable>

    <variable name="Image_Overlay_List">
        <value condition="$EXP[Exp_HasWatchedProgress]" />

        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(Indicator.DisableWatched)">indicator/checkmark-fo.png</value>
        <value condition="Integer.IsGreater(ListItem.PlayCount,0) + !String.IsEqual(ListItem.DBType,song) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,artist) + !String.IsEqual(ListItem.DBType,image) + !String.IsEqual(ListItem.DBType,addon) + !Skin.HasSetting(Indicator.DisableWatched)">indicator/checkmark-fo.png</value>

        <!-- <value condition="String.IsEqual(ListItem.Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem.DBType,movie) + [String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.1.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.2.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.3.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.4.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.5.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.6.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.7.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.8.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.9.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.10.Title))] + !Skin.HasSetting(Indicator.DisableLatest)">indicator/new-fo.png</value>

        <value condition="String.IsEqual(ListItem.Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem.DBType,episode) + [String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.1.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.2.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.3.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.4.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.5.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.6.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.7.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.8.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.9.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.10.EpisodeTitle))] + !Skin.HasSetting(Indicator.DisableLatest)">indicator/new-fo.png</value> -->

        <value condition="!String.IsEmpty(ListItem.Property(Item.Info)) + !String.IsEmpty(ListItem.DBID) + !Skin.HasSetting(Indicator.DisableLibrary)">indicator/library.png</value>
        <value condition="ListItem.IsCollection + !Skin.HasSetting(Indicator.DisableCollection)">indicator/movieset.png</value>
        <value condition="ListItem.IsFolder">indicator/folder.png</value>
        <value>indicator/library.png</value>
    </variable>

    <variable name="Image_PVRGuide_Indicator">
        <value condition="ListItem.IsRecording">indicator/record.png</value>
        <value condition="ListItem.HasTimer">indicator/timer.png</value>
        <value condition="ListItem.IsPlayable + !Skin.HasSetting(Indicator.DisablePVRGuideCatchUp)">indicator/library.png</value>
    </variable>
</includes>
